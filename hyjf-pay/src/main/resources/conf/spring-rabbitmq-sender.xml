<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/rabbit
           http://www.springframework.org/schema/rabbit/spring-rabbit.xsd
           	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.1.xsd
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd">

    <rabbit:connection-factory id="connectionFactory"
    			host="${rabbitmq.host}" port="${rabbitmq.port}" username="${rabbitmq.username}" password="${rabbitmq.password}"
		virtual-host="${rabbitmq.vhost}" />

    <!--通过指定下面的admin信息，当前producer中的exchange和queue会在rabbitmq服务器上自动生成-->
    <rabbit:admin connection-factory="connectionFactory"/>

    <!--法大大自动签署-->
    <rabbit:queue id="fdd-auto_sign" name="fdd-auto_sign" durable="true" auto-delete="false" exclusive="false"/>

    <!-- *********合规数据上报 MQ配置 liubin 20181122 start********* -->
    <!-- routingKey开户成功 -->
    <rabbit:queue id="hyjf-open-account-success-delay" name="hyjf-open-account-success-delay" auto-declare="true">
        <rabbit:queue-arguments>
            <entry key="x-message-ttl" value="30000" value-type="java.lang.Long" />
            <entry key="x-dead-letter-exchange" value="hyjf-direct-exchange" />
            <entry key="x-dead-letter-routing-key" value="open_account_success" />
        </rabbit:queue-arguments>
    </rabbit:queue>
    <!-- routingKey投资中 -->
    <rabbit:queue id="hyjf-issue-investing-delay" name="hyjf-issue-investing-delay" auto-declare="true">
        <rabbit:queue-arguments>
            <entry key="x-message-ttl" value="30000" value-type="java.lang.Long" />
            <entry key="x-dead-letter-exchange" value="hyjf-direct-exchange" />
            <entry key="x-dead-letter-routing-key" value="issue_investing" />
        </rabbit:queue-arguments>
    </rabbit:queue>
    <!-- routingKey满标 -->
    <rabbit:queue id="hyjf-issue-invested-delay" name="hyjf-issue-invested-delay" auto-declare="true">
        <rabbit:queue-arguments>
            <entry key="x-message-ttl" value="30000" value-type="java.lang.Long" />
            <entry key="x-dead-letter-exchange" value="hyjf-direct-exchange" />
            <entry key="x-dead-letter-routing-key" value="issue_invested" />
        </rabbit:queue-arguments>
    </rabbit:queue>
    <!-- routingKey放款成功 -->
    <rabbit:queue id="hyjf-loan-success-delay" name="hyjf-loan-success-delay" auto-declare="true">
        <rabbit:queue-arguments>
            <entry key="x-message-ttl" value="30000" value-type="java.lang.Long" />
            <entry key="x-dead-letter-exchange" value="hyjf-direct-exchange" />
            <entry key="x-dead-letter-routing-key" value="loan_success" />
        </rabbit:queue-arguments>
    </rabbit:queue>
    <!-- routingKey智投放款成功 -->
    <rabbit:queue id="hyjf-loan-hjh-success-delay" name="hyjf-loan-hjh-success-delay" auto-declare="true">
        <rabbit:queue-arguments>
            <entry key="x-message-ttl" value="30000" value-type="java.lang.Long" />
            <entry key="x-dead-letter-exchange" value="hyjf-direct-exchange" />
            <entry key="x-dead-letter-routing-key" value="loan_hjh_success" />
        </rabbit:queue-arguments>
    </rabbit:queue>
    <!-- routingKey转让成功 -->
    <rabbit:queue id="hyjf-transfer-success-delay" name="hyjf-transfer-success-delay" auto-declare="true">
        <rabbit:queue-arguments>
            <entry key="x-message-ttl" value="30000" value-type="java.lang.Long" />
            <entry key="x-dead-letter-exchange" value="hyjf-direct-exchange" />
            <entry key="x-dead-letter-routing-key" value="transfer_success" />
        </rabbit:queue-arguments>
    </rabbit:queue>
    <!-- routingKey单笔承接成功 -->
    <rabbit:queue id="hyjf-undertake-single-success-delay" name="hyjf-undertake-single-success-delay" auto-declare="true">
        <rabbit:queue-arguments>
            <entry key="x-message-ttl" value="30000" value-type="java.lang.Long" />
            <entry key="x-dead-letter-exchange" value="hyjf-direct-exchange" />
            <entry key="x-dead-letter-routing-key" value="undertake_single_success" />
        </rabbit:queue-arguments>
    </rabbit:queue>
    <!-- routingKey全部承接失败 -->
    <rabbit:queue id="hyjf-undertake-all-fail-delay" name="hyjf-undertake-all-fail-delay" auto-declare="true">
        <rabbit:queue-arguments>
            <entry key="x-message-ttl" value="30000" value-type="java.lang.Long" />
            <entry key="x-dead-letter-exchange" value="hyjf-direct-exchange" />
            <entry key="x-dead-letter-routing-key" value="undertake_all_fail" />
        </rabbit:queue-arguments>
    </rabbit:queue>
    <!-- routingKey全部承接成功 -->
    <rabbit:queue id="hyjf-undertake-all-success-delay" name="hyjf-undertake-all-success-delay" auto-declare="true">
        <rabbit:queue-arguments>
            <entry key="x-message-ttl" value="30000" value-type="java.lang.Long" />
            <entry key="x-dead-letter-exchange" value="hyjf-direct-exchange" />
            <entry key="x-dead-letter-routing-key" value="undertake_all_success" />
        </rabbit:queue-arguments>
    </rabbit:queue>
    <!-- routingKey单笔还款成功 -->
    <rabbit:queue id="hyjf-repay-single-success-delay" name="hyjf-repay-single-success-delay" auto-declare="true">
        <rabbit:queue-arguments>
            <entry key="x-message-ttl" value="30000" value-type="java.lang.Long" />
            <entry key="x-dead-letter-exchange" value="hyjf-direct-exchange" />
            <entry key="x-dead-letter-routing-key" value="repay_single_success" />
        </rabbit:queue-arguments>
    </rabbit:queue>
    <!-- routingKey全部还款成功 -->
    <rabbit:queue id="hyjf-repay-all-success-delay" name="hyjf-repay-all-success-delay" auto-declare="true">
        <rabbit:queue-arguments>
            <entry key="x-message-ttl" value="30000" value-type="java.lang.Long" />
            <entry key="x-dead-letter-exchange" value="hyjf-direct-exchange" />
            <entry key="x-dead-letter-routing-key" value="repay_all_success" />
        </rabbit:queue-arguments>
    </rabbit:queue>
    <!-- routingKey新增智投 -->
    <rabbit:queue id="hyjf-hjhplan-add-delay" name="hyjf-hjhplan-add-delay" auto-declare="true">
        <rabbit:queue-arguments>
            <entry key="x-message-ttl" value="30000" value-type="java.lang.Long" />
            <entry key="x-dead-letter-exchange" value="hyjf-direct-exchange" />
            <entry key="x-dead-letter-routing-key" value="hjhplan_add" />
        </rabbit:queue-arguments>
    </rabbit:queue>
    <!-- routingKey用户信息修改(修改手机号,修改银行卡号,风险测评) -->
    <rabbit:queue id="hyjf-userinfo-change-delay" name="hyjf-userinfo-change-delay" auto-declare="true">
        <rabbit:queue-arguments>
            <entry key="x-message-ttl" value="30000" value-type="java.lang.Long" />
            <entry key="x-dead-letter-exchange" value="hyjf-direct-exchange" />
            <entry key="x-dead-letter-routing-key" value="userinfo_change" />
        </rabbit:queue-arguments>
    </rabbit:queue>

    <!-- *********合规数据上报 MQ配置 liubin 20181122 end********* -->

    <!-- 定义direct exchange，绑定 queue -->
    <rabbit:direct-exchange name="hyjf-direct-exchange" durable="true" auto-delete="false">
        <rabbit:bindings>
            <rabbit:binding queue="fdd-auto_sign" key="fdd-routingkey-auto_sign"></rabbit:binding>

            <!-- *********合规数据上报 MQ配置 liubin 20181122 start********* -->
            <!-- routingKey开户成功 -->
            <rabbit:binding queue="hyjf-open-account-success-delay" key="open_account_success_delay"></rabbit:binding>
            <!-- routingKey投资中 -->
            <rabbit:binding queue="hyjf-issue-investing-delay" key="issue_investing_delay"></rabbit:binding>
            <!-- routingKey满标 -->
            <rabbit:binding queue="hyjf-issue-invested-delay" key="issue_invested_delay"></rabbit:binding>
            <!-- routingKey放款成功 -->
            <rabbit:binding queue="hyjf-loan-success-delay" key="loan_success_delay"></rabbit:binding>
            <!-- routingKey智投放款成功 -->
            <rabbit:binding queue="hyjf-loan-hjh-success-delay" key="loan_hjh_success_delay"></rabbit:binding>
            <!-- routingKey转让成功 -->
            <rabbit:binding queue="hyjf-transfer-success-delay" key="transfer_success_delay"></rabbit:binding>
            <!-- routingKey单笔承接成功 -->
            <rabbit:binding queue="hyjf-undertake-single-success-delay" key="undertake_single_success_delay"></rabbit:binding>
            <!-- routingKey全部承接失败 -->
            <rabbit:binding queue="hyjf-undertake-all-fail-delay" key="undertake_all_fail_delay"></rabbit:binding>
            <!-- routingKey全部承接成功 -->
            <rabbit:binding queue="hyjf-undertake-all-success-delay" key="undertake_all_success_delay"></rabbit:binding>
            <!-- routingKey单笔还款成功 -->
            <rabbit:binding queue="hyjf-repay-single-success-delay" key="repay_single_success_delay"></rabbit:binding>
            <!-- routingKey全部还款成功 -->
            <rabbit:binding queue="hyjf-repay-all-success-delay" key="repay_all_success_delay"></rabbit:binding>
            <!-- routingKey新增智投 -->
            <rabbit:binding queue="hyjf-hjhplan-add-delay" key="hjhplan_add_delay"></rabbit:binding>
            <!-- routingKey用户信息修改(修改手机号,修改银行卡号,风险测评) -->
            <rabbit:binding queue="hyjf-userinfo-change-delay" key="userinfo_change_delay"></rabbit:binding>
            <!-- *********合规数据上报 MQ配置 liubin 20181122 end********* -->
        </rabbit:bindings>
    </rabbit:direct-exchange>
    
    <!--定义rabbit template用于数据的接收和发送-->
    <rabbit:template id="payAmqpTemplate" connection-factory="connectionFactory" exchange="hyjf-direct-exchange"/>

</beans>