<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hyjf.mybatis.mapper.customize.web.hjh.HjhPlanCustomizeMapper">

	<sql id="selectAppIndexTemplate">
		SELECT t.* FROM (SELECT
		  hp.id as order_by_id,
          hp.plan_nid AS plan_nid,
          hp.plan_name AS plan_name,
          hp.expect_apr AS expect_apr,
          CASE
            WHEN hp.borrow_style = 'endday'
            THEN CONCAT(hp.lock_period, '天')
            ELSE CONCAT(hp.lock_period, '个月')
          END AS lock_period,
          CASE
            WHEN hp.plan_invest_status = 1  AND FORMAT(hp.available_invest_account, 2) <![CDATA[>=]]> 0.00
            THEN CONCAT(
              FORMAT(
                hp.available_invest_account / 10000,
                2
              ),
              '万'
            )
            WHEN hp.plan_invest_status = 2
            THEN '0.00 万'
            ELSE '0.00 万'
          END AS available_invest_account,
          CASE
            WHEN hp.plan_invest_status = 1 AND FORMAT(hp.available_invest_account, 2) <![CDATA[>=]]> 0.00
            THEN hp.available_invest_account
            ELSE 0
          END AS order_by_available_invest_account,
          hp.plan_invest_status AS plan_invest_status,
          CASE
            WHEN hp.plan_invest_status = 1
            AND FORMAT(hp.available_invest_account, 2) <![CDATA[<=]]> 0.00
            THEN '稍后开启'
            WHEN hp.plan_invest_status = 1
            <!--THEN '立即加入'-->
            <!-- mod by nxl 修改立即加入->授权服务 -->
			THEN '授权服务'
            WHEN hp.plan_invest_status = 2
            THEN '稍后开启'
            ELSE ''
          END AS plan_invest_status_name,
          CASE
            WHEN hp.plan_invest_status = 1
            AND FORMAT(hp.available_invest_account, 2) <![CDATA[<=]]> 0.00
            THEN 2
            WHEN hp.plan_invest_status = 1
            THEN 1
            WHEN hp.plan_invest_status = 2
            THEN 2
            ELSE 2
          END AS order_by_status_name,
          CASE
            WHEN hp.borrow_style = 'endday'
            THEN hp.lock_period
            ELSE hp.lock_period * 30
          END AS order_by_lock_period,
          coupon_config
        FROM
          hyjf_hjh_plan hp
        WHERE hp.del_flg = 0 AND hp.plan_display_status = 1) t
	</sql>

	 <sql id="Where_Clause">
		<where>
			hp.del_flg = 0
            AND hp.plan_display_status = 1
			<if test="isHome != null" >
				AND hp.is_month = 1
				AND hp.lock_period IN(1 , 3 , 6 , 12)
			</if>
		</where>
	</sql>
	<resultMap id="HjhPlanMap" type="com.hyjf.mybatis.model.customize.web.hjh.HjhPlanCustomize">
		<id column="plan_nid" property="planNid" jdbcType="VARCHAR" />
		<result column="plan_name" property="planName" jdbcType="VARCHAR" />
		<result column="expect_apr" property="planApr" jdbcType="VARCHAR" />
		<result column="lock_period" property="planPeriod" jdbcType="VARCHAR" />
		<result column="is_month" property="isMonth" jdbcType="VARCHAR" />
		<result column="available_invest_account" property="availableInvestAccount" jdbcType="VARCHAR" />
		<result column="plan_invest_status" property="status" jdbcType="VARCHAR" />
		<result column="plan_invest_status_name" property="statusName" jdbcType="VARCHAR" />
		<result column="coupon_config" property="couponEnable" jdbcType="VARCHAR" />
		<result column="order_by_available_invest_account" property="availableInvestAccountNew" jdbcType="VARCHAR" />
	</resultMap>

	<select id="selectHjhPlanList" resultMap="HjhPlanMap" parameterType="Map">
		SELECT
		hp.plan_nid AS plan_nid,
		hp.plan_name AS plan_name,
		hp.expect_apr AS expect_apr,
		hp.lock_period AS lock_period,
		hp.is_month,
		CASE
		WHEN hp.plan_invest_status = 1
		THEN FORMAT(IF(hp.available_invest_account <![CDATA[<=]]> 0, 0, hp.available_invest_account) , 2)
		WHEN hp.plan_invest_status = 2
		THEN '0.00'
		ELSE '0.00'
		END AS available_invest_account,
		hp.plan_invest_status AS plan_invest_status,
		CASE
		WHEN hp.plan_invest_status = 1 AND FORMAT(hp.available_invest_account , 2) <![CDATA[<=]]> 0.00
		THEN '稍后开启'
		WHEN hp.plan_invest_status = 1
		<!--THEN '立即加入' -->
		<!--mod by nxl 智投服务修改 -->
		THEN '授权服务'
		WHEN hp.plan_invest_status = 2
		THEN '稍后开启'
		ELSE ''
		END AS plan_invest_status_name
		FROM
		hyjf_hjh_plan hp
		<include refid="Where_Clause" />
		ORDER BY
		<if test="isHome != null" >
			hp.lock_period asc,
			hp.plan_invest_status asc, hp.available_invest_account desc, hp.id
		</if>
		<if test="isHome == null" >
			hp.is_month asc,
			hp.lock_period asc,
			hp.id
		</if>
		<if test="limitStart != null and limitEnd !=null" >
			LIMIT #{limitStart,jdbcType=INTEGER} , #{limitEnd,jdbcType=INTEGER}
		</if>
	</select>

	<select id="selectAppHjhPlanList" resultMap="HjhPlanMap" parameterType="Map">
       SELECT
        t.*
        FROM
        (SELECT
        hp.id AS order_by_id,
        hp.plan_nid AS plan_nid,
        hp.plan_name AS plan_name,
        hp.expect_apr AS expect_apr,
        hp.is_month,
        CASE
        WHEN hp.borrow_style = 'endday'
        THEN CONCAT(hp.lock_period, '天')
        ELSE CONCAT(hp.lock_period, '个月')
        END AS lock_period,
        CASE
        WHEN hp.borrow_style = 'endday'
        THEN '1'
        ELSE '2'
        END AS number,
        CASE
        WHEN hp.plan_invest_status = 1 AND FORMAT(hp.available_invest_account, 2) <![CDATA[>=]]> 0.00
        THEN CONCAT(
        FORMAT(
        hp.available_invest_account / 10000,
        2
        ),
        '万'
        )
        WHEN hp.plan_invest_status = 2
        THEN '0.00 万'
        ELSE '0.00 万'
        END AS available_invest_account,
        CASE
        WHEN hp.plan_invest_status = 1 AND FORMAT(hp.available_invest_account, 2) <![CDATA[>=]]> 0.00
        THEN hp.available_invest_account
        ELSE 0
        END AS order_by_available_invest_account,
        hp.plan_invest_status AS plan_invest_status,
        CASE
        WHEN hp.plan_invest_status = 1
        AND FORMAT(hp.available_invest_account, 2) <![CDATA[<=]]> 0.00
        THEN '稍后开启'
        WHEN hp.plan_invest_status = 1
        <!--THEN '立即加入'-->
		<!-- mod by nxl 修改立即加入->授权服务 -->
		THEN '授权服务'
        WHEN hp.plan_invest_status = 2
        THEN '稍后开启'
        ELSE ''
        END AS plan_invest_status_name,
        CASE
        WHEN hp.plan_invest_status = 1
        AND FORMAT(hp.available_invest_account, 2) <![CDATA[<=]]> 0.00
        THEN 2
        WHEN hp.plan_invest_status = 1
        THEN 1
        WHEN hp.plan_invest_status = 2
        THEN 2
        ELSE 2
        END AS order_by_status_name,
        CASE
        WHEN hp.borrow_style = 'endday'
        THEN hp.lock_period
        ELSE hp.lock_period * 30
        END AS order_by_lock_period,
        coupon_config
        FROM
        hyjf_hjh_plan hp
        WHERE hp.del_flg = 0 AND hp.plan_display_status = 1) t
        ORDER BY 
        t.is_month ASC,
        t.order_by_lock_period ASC,
        t.order_by_id ASC,
        t.number ASC
        <if test="limitStart != null and limitEnd !=null" >
			LIMIT #{limitStart,jdbcType=INTEGER} , #{limitEnd,jdbcType=INTEGER}
		</if>
	</select>

	<select id="selectIndexHjhPlanList" resultMap="HjhPlanMap" parameterType="Map">
		<include refid="selectAppIndexTemplate" />
		ORDER BY t.order_by_status_name ASC, t.order_by_lock_period ASC
		<if test="limitStart != null and limitEnd !=null" >
			LIMIT #{limitStart,jdbcType=INTEGER} , #{limitEnd,jdbcType=INTEGER}
		</if>
	</select>

	<select id="selectIndexHjhExtensionPlanList" resultMap="HjhPlanMap" parameterType="Map">
		<include refid="selectAppIndexTemplate" />
		ORDER BY t.order_by_status_name,t.order_by_available_invest_account ASC, t.order_by_lock_period ASC
		<if test="limitStart != null and limitEnd !=null" >
			LIMIT #{limitStart,jdbcType=INTEGER} , #{limitEnd,jdbcType=INTEGER}
		</if>
	</select>

	<select id="selectIndexHjhExtensionPlanListByLockTime" resultMap="HjhPlanMap" parameterType="Map">
		<include refid="selectAppIndexTemplate" />
		ORDER BY t.order_by_lock_period ASC
		<if test="limitStart != null and limitEnd !=null" >
			LIMIT #{limitStart,jdbcType=INTEGER} , #{limitEnd,jdbcType=INTEGER}
		</if>
	</select>


	<select id="countHjhPlanList" resultType="java.lang.Integer" parameterType="java.util.Map">
		SELECT
			count(hp.id) AS recordTotal
		FROM
		    hyjf_hjh_plan hp
		<include refid="Where_Clause" />
	</select>

	<select id="searchPlanStatisticData" resultType="map" >
				SELECT
			count(hha.id) + (
				SELECT
					count(dpa.id) AS total_record
				FROM
					hyjf_debt_plan_accede dpa
			) AS accede_times,

				(IFNULL(sum(hha.accede_account), 0) + (
					SELECT
						IFNULL(sum(dpa.accede_account), 0)
					FROM
						hyjf_debt_plan_accede dpa
				))/10000
			 AS accede_account_total,

				(IFNULL(
					sum(hha.received_interest),
					0
				) + (
					SELECT
						IFNULL(
							sum(dpa.repay_interest_yes),
							0
						)
					FROM
						hyjf_debt_plan_accede dpa
				))/10000
				 AS interest_total
		FROM
			hyjf_hjh_accede hha

	</select>
<resultMap id="userHjhInvistDetailMap" type="com.hyjf.mybatis.model.customize.web.hjh.UserHjhInvistDetailCustomize">
		<id column="plan_nid" property="planNid" jdbcType="VARCHAR" />
		<result column="plan_name" property="planName" jdbcType="VARCHAR" />
		<result column="accede_order_id" property="accedeOrderId" jdbcType="VARCHAR" />
		<result column="expect_apr" property="planApr" jdbcType="VARCHAR" />
		<result column="lock_period" property="planPeriod" jdbcType="VARCHAR" />
		<result column="user_id" property="userId" jdbcType="VARCHAR" />
		<result column="accede_account" property="accedeAccount" jdbcType="VARCHAR" />
		<result column="add_time" property="addTime" jdbcType="VARCHAR" />
		<result column="quit_time" property="quitTime" jdbcType="VARCHAR" />
		<result column="last_payment_time" property="lastPaymentTime" jdbcType="VARCHAR" />
		<result column="acctual_payment_time" property="acctualPaymentTime" jdbcType="VARCHAR" />
		<result column="count_interest_time" property="countInterestTime" jdbcType="VARCHAR" />

		<result column="wait_total" property="waitTotal" jdbcType="VARCHAR" />
		<result column="wait_interest" property="waitInterest" jdbcType="VARCHAR" />
		<result column="received_total" property="receivedTotal" jdbcType="VARCHAR" />
		<result column="received_interest" property="receivedInterest" jdbcType="VARCHAR" />
		<result column="all_total" property="allTotal" jdbcType="VARCHAR" />
		<result column="all_interest" property="allInterest" jdbcType="VARCHAR" />
		<result column="should_pay_total" property="shouldPayTotal" jdbcType="VARCHAR" />
		<result column="repay_method" property="repayMethod" jdbcType="VARCHAR" />
		<result column="order_status" property="orderStatus" jdbcType="VARCHAR" />
		<result column="repay_actual_time" property="repayActualTime" jdbcType="VARCHAR" />
	</resultMap>

	<select id="selectUserHjhInvistDetail" resultMap="userHjhInvistDetailMap" parameterType="Map">
			SELECT 	
				hhp.plan_nid plan_nid,
				hhp.plan_name plan_name,
				hha.accede_order_id accede_order_id,
				CONCAT(hha.expect_apr, '%') expect_apr,
				CASE
					WHEN hhp.borrow_style ='endday' THEN CONCAT(hhp.lock_period,'天')
					ELSE CONCAT(hhp.lock_period,'个月')
				END AS lock_period,
				hha.user_id user_id,
				hha.accede_account accede_account,
				FROM_UNIXTIME( hha.add_time, '%Y-%m-%d %H:%i' ) AS add_time,
				IFNULL(FROM_UNIXTIME( IF(hha.quit_time=0,NULL,hha.quit_time), '%Y-%m-%d' ),'待确认') AS quit_time,
				IFNULL(FROM_UNIXTIME( IF(hha.last_payment_time=0,NULL,hha.last_payment_time), '%Y-%m-%d' ),'待确认') AS last_payment_time,
				IFNULL(FROM_UNIXTIME( IF(hha.acctual_payment_time=0,NULL,hha.acctual_payment_time), '%Y-%m-%d' ),'待确认') AS acctual_payment_time,
				IFNULL(FROM_UNIXTIME( IF(hha.count_interest_time=0,NULL,hha.count_interest_time), '%Y-%m-%d' ),'待确认') AS count_interest_time,
				hha.wait_total wait_total,
				hha.wait_interest wait_interest,
				hha.received_total received_total,
				hha.received_interest received_interest,
				(hha.wait_total + hha.received_total) all_total,
				(hha.wait_interest + hha.received_interest) all_interest,
				
				SUBSTRING(FORMAT(hha.should_pay_total,4),1,LENGTH(FORMAT(hha.should_pay_total,4))-2) AS should_pay_total,

				(SELECT hbs.NAME FROM huiyingdai_borrow_style hbs where hbs.nid = hhp.borrow_style limit 1 ) repay_method,
				hha.order_status order_status,
				<!-- 新加实际退出时间 -->
				FROM_UNIXTIME(hhr.repay_actual_time, '%Y-%m-%d') AS repay_actual_time
			FROM hyjf_hjh_accede hha 
			LEFT JOIN hyjf_hjh_plan hhp ON hha.plan_nid=hhp.plan_nid
			LEFT JOIN hyjf_hjh_repay hhr ON hhr.accede_order_id = hha.accede_order_id
			WHERE hha.accede_order_id = #{accedeOrderId} and hha.user_id =#{userId}
	</select>

	<resultMap id="userHjhInvistListMap" type="com.hyjf.mybatis.model.customize.web.hjh.UserHjhInvistListCustomize">
		<result column="nid" property="nid" jdbcType="VARCHAR" />
		<result column="borrow_nid" property="borrowNid" jdbcType="VARCHAR" />
		<result column="account" property="account" jdbcType="VARCHAR" />
		<result column="accede_order_id" property="accedeOrderId" jdbcType="VARCHAR" />
		<result column="borrow_period" property="borrowPeriod" jdbcType="VARCHAR" />
		<result column="addtime" property="addTime" jdbcType="VARCHAR" />
		<result column="recover_time" property="recoverTime" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="VARCHAR" />

		<result column="credit_nid" property="creditNid" jdbcType="VARCHAR" />
		<result column="invest_order_id" property="investOrderId" jdbcType="VARCHAR" />
		<result column="assign_order_id" property="assignOrderId" jdbcType="VARCHAR" />
		
	</resultMap>

	<select id="selectUserHjhInvistBorrowList" resultMap="userHjhInvistListMap" parameterType="Map">
	
		(
		SELECT
			hhdc.assign_order_id AS nid,
			hhdc.borrow_nid borrow_nid,
			hhdc.credit_nid credit_nid,
			hhdc.invest_order_id invest_order_id,
			hhdc.assign_order_id assign_order_id,
			
			hhdc.assign_pay account,
			
			hhdc.assign_plan_order_id accede_order_id,
			CASE
			WHEN hb.borrow_style = 'endday' THEN
				CONCAT(hb.borrow_period, '天')
			ELSE
				CONCAT(hb.borrow_period, '个月')
			END AS borrow_period,
			FROM_UNIXTIME( hhdc.create_time, '%Y-%m-%d' ) addtime,
			
			CASE
			WHEN hhdc.assign_repay_next_time = 0 THEN
			IFNULL(FROM_UNIXTIME( hhdc.assign_repay_end_time, '%Y-%m-%d' ), '--') 
			ELSE
			IFNULL(FROM_UNIXTIME( hhdc.assign_repay_next_time, '%Y-%m-%d' ), '--')	
			END recover_time,
			
			1 type
		FROM hyjf_hjh_debt_credit_tender hhdc
			LEFT JOIN huiyingdai_borrow hb ON hhdc.borrow_nid = hb.borrow_nid
			WHERE hhdc.assign_plan_order_id = #{accedeOrderId} 
		)
		
		UNION ALL
	
		(
		SELECT
		  hbt.nid nid,
		  hbt.borrow_nid borrow_nid,
		  0 AS credit_nid,
		  0 AS invest_order_id,
		  0 AS assign_order_id,
		  hbt.account account,
		  hbt.accede_order_id accede_order_id,
		  CASE
		  WHEN hb.borrow_style = 'endday' THEN CONCAT(hb.borrow_period, '天')
		  ELSE CONCAT(hb.borrow_period, '个月')
		  END AS borrow_period,
		  FROM_UNIXTIME(hbt.addtime, '%Y-%m-%d') addtime,
		  
		  CASE
		  WHEN hb.borrow_style = 'endday' or hb.borrow_style = 'end' or hb.borrow_style = 'endmonth'	  
		  THEN
		  CASE
		  WHEN hbr.recover_status = 1 THEN
		  IFNULL(FROM_UNIXTIME( hbr.recover_yestime, '%Y-%m-%d' ), '--')
		  ELSE
		  IFNULL(FROM_UNIXTIME( hbr.recover_time, '%Y-%m-%d' ), '--')
		  END
		  ELSE
		  CASE WHEN hbrp.recover_status = 1 THEN
		  IFNULL(FROM_UNIXTIME(hbrp.recover_yestime,'%Y-%m-%d'), '--')
		  ELSE
		  IFNULL(FROM_UNIXTIME(hbrp.recover_time,'%Y-%m-%d'), '--')
		  END
		  END AS recover_time,
		  0 type
		FROM
		  huiyingdai_borrow_tender hbt
		LEFT JOIN huiyingdai_borrow hb ON hbt.borrow_nid = hb.borrow_nid
		LEFT JOIN huiyingdai_borrow_recover hbr ON hbt.nid = hbr.nid
		
		LEFT JOIN huiyingdai_borrow_recover_plan hbrp ON hbt.nid = hbrp.nid
		AND hbrp.borrow_nid = hb.borrow_nid
		AND hbrp.recover_period = hb.borrow_period
		WHERE
		  hb.`status` in (3,4,5)
		  AND
		  hbt.accede_order_id = #{accedeOrderId}
		)
		<if test="limitStart != null and limitEnd !=null" >
	      LIMIT #{limitStart,jdbcType=INTEGER} , #{limitEnd,jdbcType=INTEGER}
	    </if>
	</select>

	<update id="updatePlanAccount" parameterType="com.hyjf.mybatis.model.auto.HjhPlan">
		update hyjf_hjh_plan
		set
		<if test="joinTotal != null">
			join_total = IFNULL(join_total,0) + #{joinTotal,jdbcType=DECIMAL},
		</if>
		<if test="availableInvestAccount != null">
			available_invest_account = IFNULL(available_invest_account,0) + #{availableInvestAccount,jdbcType=DECIMAL}
		</if>
		where
		plan_nid = #{planNid,jdbcType=VARCHAR}
	</update>
	
	<update id="updateRepayPlanAccount" parameterType="com.hyjf.mybatis.model.auto.HjhPlan">
		update hyjf_hjh_plan
		set
		available_invest_account = IFNULL(available_invest_account,0) - #{availableInvestAccount,jdbcType=DECIMAL}
		where
		plan_nid = #{planNid,jdbcType=VARCHAR}
	</update>

	<update id="updateInvestAccount" parameterType="com.hyjf.mybatis.model.auto.HjhAccede">
		update hyjf_hjh_accede
		set
		already_invest = IFNULL(already_invest,0) + #{alreadyInvest,jdbcType=DECIMAL},
		available_invest_account = IFNULL(available_invest_account,0) - #{availableInvestAccount,jdbcType=DECIMAL},
		wait_total = IFNULL(wait_total,0) + #{waitTotal,jdbcType=DECIMAL},
		wait_interest = IFNULL(wait_interest,0) + #{waitInterest,jdbcType=DECIMAL},
		wait_captical = IFNULL(wait_captical,0) + #{waitCaptical,jdbcType=DECIMAL},
        update_user = #{updateUser,jdbcType=INTEGER},
        update_time = #{updateTime,jdbcType=INTEGER}
		where
		id = #{id,jdbcType=INTEGER}
	</update>

	<!--add 汇计划三期 计划订单投资笔数累加 liubin 20180515 start;
	 add 汇计划三期 计划订单投资笔数累加 liubin 20180515 end;
	 add 汇计划三期 汇计划自动投资(收债转服务费) liubin 20180515 start;-->
	<!--add 汇计划三期 汇计划自动投资(收债转服务费) liubin 20180515 end-->
	<update id="updateHjhAccedeForHjhProcess" parameterType="com.hyjf.mybatis.model.auto.HjhAccede">
		update hyjf_hjh_accede
		<set>
			<if test="alreadyInvest != null">
				already_invest = IFNULL(already_invest,0) + #{alreadyInvest,jdbcType=DECIMAL},
			</if>
			<if test="availableInvestAccount != null">
				available_invest_account = IFNULL(available_invest_account,0) +
				#{availableInvestAccount,jdbcType=DECIMAL},
			</if>
			<if test="frostAccount != null">
				frost_account = IFNULL(frost_account,0) +
				#{frostAccount,jdbcType=DECIMAL},
			</if>
			<if test="waitTotal != null">
				wait_total = IFNULL(wait_total,0) + #{waitTotal,jdbcType=DECIMAL},
			</if>
			<if test="waitInterest != null">
				wait_interest = IFNULL(wait_interest,0) + #{waitInterest,jdbcType=DECIMAL},
			</if>
			<if test="waitCaptical != null">
				wait_captical = IFNULL(wait_captical,0) + #{waitCaptical,jdbcType=DECIMAL},
			</if>

			<if test="investCounts != null">
				invest_counts = invest_counts + #{investCounts,jdbcType=INTEGER},
			</if>

			<if test="lqdServiceFee != null">
				lqd_service_fee = lqd_service_fee + #{lqdServiceFee,jdbcType=DECIMAL},
			</if>

			<if test="updateUser != null">
				update_user = #{updateUser,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=INTEGER}
			</if>
		</set>
		where
		id = #{id,jdbcType=INTEGER}
	</update>
	
	<update id="updateHjhRepayForHjhRepay" parameterType="com.hyjf.mybatis.model.auto.HjhRepay">
		update hyjf_hjh_repay
		set
		repay_total = IFNULL(repay_total,0) + #{repayTotal,jdbcType=DECIMAL},
		plan_repay_capital = IFNULL(plan_repay_capital,0) + #{planRepayCapital,jdbcType=DECIMAL},
		plan_repay_interest = IFNULL(plan_repay_interest,0) + #{planRepayInterest,jdbcType=DECIMAL},
		repay_already = IFNULL(repay_already,0) + #{repayAlready,jdbcType=DECIMAL}
		where
		id = #{id,jdbcType=INTEGER}
	</update>

	<select id="selectDebtPlanDetail" resultMap="DebtPlanDetailMap" parameterType="Map">
		SELECT
			dp.plan_nid,
			dp.plan_name,
			dp.lock_period,
			dp.is_month,
			dp.expect_apr,
			dp.min_investment,
			dp.plan_invest_status,
			dp.max_investment,
			dp.investment_increment,
			dp.available_invest_account,
			dp.plan_concept,
			dp.plan_principle,
			dp.safeguard_measures,
			dp.margin_measures,
			dp.normal_questions,
			dp.plan_invest_status,
			dp.coupon_config,
			dp.borrow_style,
			hbs.name,
			dp.invest_level
		FROM
			hyjf_hjh_plan dp
		LEFT JOIN
			huiyingdai_borrow_style hbs
		ON  hbs.nid = dp.borrow_style
		WHERE
			dp.plan_nid = #{planNid,jdbcType=VARCHAR}
		AND hbs.status = 0
	</select>
	<resultMap id="DebtPlanDetailMap" type="com.hyjf.mybatis.model.customize.web.htj.DebtPlanDetailCustomize">
		<id column="plan_nid" property="planNid"  />
		<result column="plan_name" property="planName"  />
		<result column="lock_period" property="planPeriod"  />
		<result column="expect_apr" property="planApr"  />
		
		<result column="is_month" property="isMonth"  />
		
		<result column="min_investment" property="debtMinInvestment"  />
		<result column="max_investment" property="debtMaxInvestment"  />
		<result column="plan_invest_status" property="planStatus"  />
		<result column="investment_increment" property="debtInvestmentIncrement"  />
		<result column="available_invest_account" property="availableInvestAccount"  />
		<result column="plan_concept" property="planConcept"  />
		<result column="plan_principle" property="planPrinciple"  />
		<result column="safeguard_measures" property="safeguardMeasures"  />
		<result column="margin_measures" property="marginMeasures"  />
		<result column="normal_questions" property="normalQuestions"  />
		<result column="coupon_config" property="couponConfig" jdbcType="VARCHAR" />
		<result column="plan_invest_status" property="planStatus" jdbcType="VARCHAR" />
		<result column="borrow_style" property="borrowStyle" jdbcType="VARCHAR" />
		<result column="name" property="borrowStyleName" jdbcType="VARCHAR" />
		<!-- add by wx 20181205 标的投资等级-->
		<result column="invest_level" property="investLevel" jdbcType="VARCHAR" />
	</resultMap>

	<select id="countPlanAccedeRecordTotal" resultType="java.lang.Integer" parameterType="Map">
		SELECT
			COUNT(1) 
		FROM
			hyjf_hjh_accede 
		WHERE plan_nid=#{planNid}
	</select>

	<select id="selectPlanAccedeSum" resultType="java.lang.Long" parameterType="Map">
		SELECT
			sum(accede_account) accedeSum
		FROM
			hyjf_hjh_accede 
		WHERE plan_nid=#{planNid}
	</select>

	<resultMap id="DebtPlanAccedeMap" type="com.hyjf.mybatis.model.customize.web.htj.DebtPlanAccedeCustomize">
		<id column="user_id" property="userId" jdbcType="VARCHAR" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="accede_account" property="accedeAccount" jdbcType="VARCHAR" />
		<result column="create_time" property="accedeTime" jdbcType="VARCHAR" />
		<result column="client" property="client" jdbcType="VARCHAR" />
		<result column="vip_id" property="vipId" jdbcType="VARCHAR" />
		<result column="vip_value" property="vipLevel" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectPlanAccedeList" resultMap="DebtPlanAccedeMap" parameterType="Map">
			SELECT
				dpa.user_id,
				CASE WHEN LENGTH(dpa.user_name)<![CDATA[>]]>1
					THEN
					CONCAT(SUBSTR(dpa.user_name,1,1),'**')
					ELSE
					dpa.user_name
					END user_name,
		        SUBSTRING(FORMAT(dpa.accede_account,4),1,LENGTH(FORMAT(dpa.accede_account,4))-2) AS accede_account,
				FROM_UNIXTIME(
				dpa.add_time,
				'%Y-%m-%d %H:%i:%s'
				) AS create_time,
				IFNULL(hui.vip_id,0) vip_id,
				hui.vip_value,
				hpn.`name` client
			FROM
				hyjf_hjh_accede dpa
			LEFT JOIN huiyingdai_users_info hui ON hui.user_id = dpa.user_id
			LEFT JOIN hyjf_param_name hpn ON dpa.client=hpn.name_cd AND hpn.name_class='CLIENT'
			WHERE dpa.plan_nid=#{planNid}
		ORDER BY
			dpa.add_time DESC
		<if test="limitStart != null and limitEnd !=null" >
	      LIMIT #{limitStart,jdbcType=INTEGER} , #{limitEnd,jdbcType=INTEGER}
	    </if>
	</select>

	<select id="countPlanBorrowRecordTotal" resultType="java.lang.Integer" parameterType="Map">
	
		SELECT COUNT(1)
		FROM 
		(
				SELECT DISTINCT *
		FROM(
		(SELECT
				hb.borrow_nid,
				hb.borrow_user_name,
				hb.borrow_apr,
				hb.account,
				hb.company_or_personal,
				IFNULL(
					hb.finance_purpose,
					'无借款用途'
				) financePurpose,
				CASE
			WHEN hb.borrow_style = 'endday' THEN
				CONCAT(hb.borrow_period, '天')
			ELSE
				CONCAT(hb.borrow_period, '个月')
			END borrow_period,
			IFNULL(hbs.NAME, '') NAME,
			hb.addtime
			
		FROM
			huiyingdai_borrow hb
		LEFT JOIN huiyingdai_borrow_style hbs ON hbs.nid = hb.borrow_style
		JOIN hyjf_hjh_debt_credit ON credit_status IN (0, 1)
		AND hb.borrow_nid = hyjf_hjh_debt_credit.borrow_nid
		WHERE
		hyjf_hjh_debt_credit.plan_nid_new = #{planNid}
		AND hb.STATUS = 4
	ORDER BY
				hb.addtime ASC
		)
		UNION ALL
			(
				SELECT
					hb.borrow_nid,
					hb.borrow_user_name,
					hb.borrow_apr,
					hb.account,
					hb.company_or_personal,
					IFNULL(
						hb.finance_purpose,
						'无借款用途'
					) financePurpose,
					CASE
				WHEN hb.borrow_style = 'endday' THEN
					CONCAT(hb.borrow_period, '天')
				ELSE
					CONCAT(hb.borrow_period, '个月')
				END borrow_period,
				IFNULL(hbs.NAME, '') NAME,
			hb.addtime
			FROM
				huiyingdai_borrow hb
			LEFT JOIN huiyingdai_borrow_style hbs ON hbs.nid = hb.borrow_style
			WHERE
				hb.plan_nid = #{planNid}
			AND hb.STATUS = 2
			AND hb.borrow_full_status = 0
			ORDER BY
				hb.addtime ASC
			)
		UNION ALL
			(
				SELECT
					hb.borrow_nid,
					hb.borrow_user_name,
					hb.borrow_apr,
					hb.account,
					hb.company_or_personal,
					IFNULL(
						hb.finance_purpose,
						'无借款用途'
					) financePurpose,
					CASE
				WHEN hb.borrow_style = 'endday' THEN
					CONCAT(hb.borrow_period, '天')
				ELSE
					CONCAT(hb.borrow_period, '个月')
				END borrow_period,
				IFNULL(hbs.NAME, '') NAME,
			hb.addtime
		FROM
			huiyingdai_borrow hb
		LEFT JOIN huiyingdai_borrow_style hbs ON hbs.nid = hb.borrow_style
		WHERE
			hb.plan_nid = #{planNid}
		AND hb.borrow_full_status = 1
		AND hb.borrow_full_time &gt;= #{startTime}
		AND hb.borrow_full_time &lt;= #{endTime}
ORDER BY
				hb.addtime ASC
		)
		UNION ALL
			(
			SELECT
				hb.borrow_nid,
				hb.borrow_user_name,
				hb.borrow_apr,
				hb.account,
				hb.company_or_personal,
				IFNULL(
					hb.finance_purpose,
					'无借款用途'
				) financePurpose,
				CASE
			WHEN hb.borrow_style = 'endday' THEN
				CONCAT(hb.borrow_period, '天')
			ELSE
				CONCAT(hb.borrow_period, '个月')
			END borrow_period,
			IFNULL(hbs.NAME, '') NAME,
			hb.addtime
		FROM
			huiyingdai_borrow hb
		LEFT JOIN huiyingdai_borrow_style hbs ON hbs.nid = hb.borrow_style
		JOIN hyjf_hjh_debt_credit ON credit_capital_wait = 0
		AND end_time &gt;= #{startTime}
		AND end_time &lt;= #{endTime}
		AND hb.borrow_nid = hyjf_hjh_debt_credit.borrow_nid
		WHERE
			hyjf_hjh_debt_credit.plan_nid_new = #{planNid}
			ORDER BY
				hb.addtime ASC 
		))t
		) AS t

	</select>

	<resultMap id="PlanBorrowMap" type="com.hyjf.mybatis.model.customize.web.htj.DebtPlanBorrowCustomize">
		<id column="borrow_nid" property="borrowNid" jdbcType="VARCHAR" />
		<result column="name" property="borrowStyleName" jdbcType="VARCHAR" />
		<result column="borrow_apr" property="borrowApr" jdbcType="VARCHAR" />
		<result column="company_or_personal" property="companyOrPersonal" jdbcType="VARCHAR" />
		<result column="borrow_user_name" property="borrowUserName" jdbcType="VARCHAR" />
		<result column="borrow_period" property="borrowPeriod" jdbcType="VARCHAR" />
		<result column="account" property="borrowAmount" jdbcType="VARCHAR" />
		<result column="financePurpose" property="borrowPurpose" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectPlanBorrowList" resultMap="PlanBorrowMap" parameterType="Map">
		SELECT DISTINCT *
		FROM(
		(SELECT
				hb.borrow_nid,
				hb.borrow_user_name,
				hb.borrow_apr,
				hb.account,
				hb.company_or_personal,
				IFNULL(
				<!-- upd by liushouyi nifa2 20181206 start -->
					<!-- hb.finance_purpose, -->
					hpn.name,
				<!-- upd by liushouyi nifa2 20181206 end -->
					'无借款用途'
				) financePurpose,
				CASE
			WHEN hb.borrow_style = 'endday' THEN
				CONCAT(hb.borrow_period, '天')
			ELSE
				CONCAT(hb.borrow_period, '个月')
			END borrow_period,
			IFNULL(hbs.NAME, '') NAME,
			hb.addtime
			
		FROM
			huiyingdai_borrow hb
		LEFT JOIN huiyingdai_borrow_style hbs ON hbs.nid = hb.borrow_style
		LEFT JOIN hyjf_param_name hpn ON hb.finance_purpose = hpn.name_cd AND hpn.name_class = 'FINANCE_PURPOSE'
		JOIN hyjf_hjh_debt_credit ON credit_status IN (0, 1)
		AND hb.borrow_nid = hyjf_hjh_debt_credit.borrow_nid
		WHERE
		hyjf_hjh_debt_credit.plan_nid_new = #{planNid}
		AND hb.STATUS = 4
	ORDER BY
				hb.addtime ASC
		)
		UNION ALL
			(
				SELECT
					hb.borrow_nid,
					hb.borrow_user_name,
					hb.borrow_apr,
					hb.account,
					hb.company_or_personal,
					IFNULL(
                    <!-- upd by liushouyi nifa2 20181206 start -->
                    <!-- hb.finance_purpose, -->
                    hpn.name,
                    <!-- upd by liushouyi nifa2 20181206 end -->
						'无借款用途'
					) financePurpose,
					CASE
				WHEN hb.borrow_style = 'endday' THEN
					CONCAT(hb.borrow_period, '天')
				ELSE
					CONCAT(hb.borrow_period, '个月')
				END borrow_period,
				IFNULL(hbs.NAME, '') NAME,
			hb.addtime
			FROM
				huiyingdai_borrow hb
			LEFT JOIN huiyingdai_borrow_style hbs ON hbs.nid = hb.borrow_style
            LEFT JOIN hyjf_param_name hpn ON hb.finance_purpose = hpn.name_cd AND hpn.name_class = 'FINANCE_PURPOSE'
			WHERE
				hb.plan_nid = #{planNid}
			AND hb.STATUS = 2
			AND hb.borrow_full_status = 0
			ORDER BY
				hb.addtime ASC
			)
		UNION ALL
			(
				SELECT
					hb.borrow_nid,
					hb.borrow_user_name,
					hb.borrow_apr,
					hb.account,
					hb.company_or_personal,
					IFNULL(
                    <!-- upd by liushouyi nifa2 20181206 start -->
                    <!-- hb.finance_purpose, -->
                    hpn.name,
                    <!-- upd by liushouyi nifa2 20181206 end -->
						'无借款用途'
					) financePurpose,
					CASE
				WHEN hb.borrow_style = 'endday' THEN
					CONCAT(hb.borrow_period, '天')
				ELSE
					CONCAT(hb.borrow_period, '个月')
				END borrow_period,
				IFNULL(hbs.NAME, '') NAME,
			hb.addtime
		FROM
			huiyingdai_borrow hb
		LEFT JOIN huiyingdai_borrow_style hbs ON hbs.nid = hb.borrow_style
        LEFT JOIN hyjf_param_name hpn ON hb.finance_purpose = hpn.name_cd AND hpn.name_class = 'FINANCE_PURPOSE'
		WHERE
			hb.plan_nid = #{planNid}
		AND hb.borrow_full_status = 1
		AND hb.borrow_full_time &gt;= #{startTime}
		AND hb.borrow_full_time &lt;= #{endTime}
ORDER BY
				hb.addtime ASC
		)
		UNION ALL
			(
			SELECT
				hb.borrow_nid,
				hb.borrow_user_name,
				hb.borrow_apr,
				hb.account,
				hb.company_or_personal,
				IFNULL(
                    <!-- upd by liushouyi nifa2 20181206 start -->
                    <!-- hb.finance_purpose, -->
                    hpn.name,
                    <!-- upd by liushouyi nifa2 20181206 end -->
					'无借款用途'
				) financePurpose,
				CASE
			WHEN hb.borrow_style = 'endday' THEN
				CONCAT(hb.borrow_period, '天')
			ELSE
				CONCAT(hb.borrow_period, '个月')
			END borrow_period,
			IFNULL(hbs.NAME, '') NAME,
			hb.addtime
		FROM
			huiyingdai_borrow hb
		LEFT JOIN huiyingdai_borrow_style hbs ON hbs.nid = hb.borrow_style
        LEFT JOIN hyjf_param_name hpn ON hb.finance_purpose = hpn.name_cd AND hpn.name_class = 'FINANCE_PURPOSE'
		JOIN hyjf_hjh_debt_credit ON credit_capital_wait = 0
		AND end_time &gt;= #{startTime}
		AND end_time &lt;= #{endTime}
		AND hb.borrow_nid = hyjf_hjh_debt_credit.borrow_nid
		WHERE
			hyjf_hjh_debt_credit.plan_nid_new = #{planNid}
			ORDER BY
				hb.addtime ASC 
		))t
		<if test="limitStart != null and limitEnd !=null" >
	      LIMIT #{limitStart} , #{limitEnd}
	    </if>
	</select>

	<select id="selectUserAppointmentInfo" parameterType="java.lang.String"  resultType="java.util.Map">
		SELECT
		user_id,
		user_name name,
		auto_inves_status autoiStatus,
		auto_credit_status autocStatus,
		auto_withdraw_status autowStatus,
		auto_consume_status autocoSataus,
		auto_create_time invesTime,
		auto_order_id iorderId,
		auto_create_time time
	FROM
		hyjf_hjh_user_auth
	WHERE user_id=#{value} 
	</select>

	<update id="updateOfPlanJoin" parameterType="com.hyjf.mybatis.model.auto.Account">
		UPDATE huiyingdai_account
		SET
		bank_invest_sum = IFNULL(bank_invest_sum,0) + #{bankInvestSum,jdbcType=DECIMAL},
		bank_balance = IFNULL(bank_balance,0) - #{bankBalance,jdbcType=DECIMAL},
		plan_balance = IFNULL(plan_balance,0) + #{planBalance,jdbcType=DECIMAL}
		WHERE
		user_id = #{userId,jdbcType=INTEGER}
	</update>

	<update id="updateByDebtPlanId"  parameterType="Map">
		UPDATE hyjf_hjh_plan
		SET 
		available_invest_account = IFNULL(available_invest_account,0) - #{accountDecimal,jdbcType=DECIMAL},
		repay_wait_all = IFNULL(repay_wait_all,0) + #{accountDecimal,jdbcType=DECIMAL} + #{earnings,jdbcType=DECIMAL},
		join_total = IFNULL(join_total,0) + #{accountDecimal,jdbcType=DECIMAL},
		plan_wait_captical = IFNULL(plan_wait_captical,0) + #{accountDecimal,jdbcType=DECIMAL},
		plan_wait_interest = IFNULL(plan_wait_interest,0) + #{earnings,jdbcType=DECIMAL}
		WHERE 
		plan_nid=#{planId}
	</update>

	<select id="countUserHjhInvistBorrowListTotal" resultType="java.lang.Integer" parameterType="Map">
		select count(*)

		from (
				(
				SELECT
				hhdc.id AS nid,
				hhdc.borrow_nid borrow_nid,
				
				hhdc.credit_nid credit_nid,
				hhdc.invest_order_id invest_order_id,
				hhdc.assign_order_id assign_order_id,
				
				hhdc.assign_capital account,
				hhdc.assign_plan_order_id accede_order_id,
				CASE
				WHEN hb.borrow_style = 'endday' THEN
					CONCAT(hb.borrow_period, '天')
				ELSE
					CONCAT(hb.borrow_period, '个月')
				END AS borrow_period,
				FROM_UNIXTIME( hhdc.create_time, '%Y-%m-%d' ) addtime,
				CASE
				WHEN hhdc.assign_repay_yes_time = 0 THEN
					FROM_UNIXTIME( hhdc.assign_repay_next_time, '%Y-%m-%d' )
				ELSE
					FROM_UNIXTIME( hhdc.assign_repay_yes_time, '%Y-%m-%d' )
				END recover_time,
				1 type
				FROM hyjf_hjh_debt_credit_tender hhdc
				LEFT JOIN huiyingdai_borrow hb ON hhdc.borrow_nid = hb.borrow_nid
				WHERE hhdc.assign_plan_order_id = #{accedeOrderId} 
				)
				
				UNION ALL
				
				(
				SELECT
					hbt.nid nid,
					hbt.borrow_nid borrow_nid,
					
					0 AS credit_nid,
					0 AS invest_order_id,
					0 AS assign_order_id,
				
					hbt.account account,
					hbt.accede_order_id accede_order_id,
					CASE
					WHEN hb.borrow_style = 'endday' THEN
						CONCAT(hb.borrow_period, '天')
					ELSE
						CONCAT(hb.borrow_period, '个月')
					END AS borrow_period,
					FROM_UNIXTIME( hbt.addtime, '%Y-%m-%d' ) addtime,
					CASE
					WHEN hbr.recover_status = 1 THEN
						FROM_UNIXTIME( hbr.recover_yestime, '%Y-%m-%d' )
					ELSE
						FROM_UNIXTIME( hbr.recover_time, '%Y-%m-%d' )
					END recover_time,
					0 type
				FROM
					huiyingdai_borrow_tender hbt
				LEFT JOIN huiyingdai_borrow hb ON hbt.borrow_nid = hb.borrow_nid
				LEFT JOIN huiyingdai_borrow_recover hbr ON hbt.nid = hbr.nid
				WHERE 
				hb.`status` in (3,4,5)
				AND
				hbt.accede_order_id = #{accedeOrderId} 
				)
		) AS a
	</select>

	  <resultMap id="planRepayMap" type="com.hyjf.mybatis.model.customize.web.hjh.HjhPlanRepayCustomize" >
	    <id column="id" property="id" jdbcType="INTEGER" />
	    <result column="accede_order_id" property="accedeOrderId" jdbcType="VARCHAR" />
	    <result column="plan_nid" property="planNid" jdbcType="VARCHAR" />
	    <result column="lock_period" property="lockPeriod" jdbcType="INTEGER" />
	    <result column="user_id" property="userId" jdbcType="INTEGER" />
	    <result column="user_name" property="userName" jdbcType="VARCHAR" />
	    <result column="user_attribute" property="userAttribute" jdbcType="INTEGER" />
	    <result column="accede_account" property="accedeAccount" jdbcType="DECIMAL" />
	    <result column="repay_interest" property="repayInterest" jdbcType="DECIMAL" />
	    <result column="repay_capital" property="repayCapital" jdbcType="DECIMAL" />
	    <result column="repay_status" property="repayStatus" jdbcType="TINYINT" />
	    <result column="repay_already" property="repayAlready" jdbcType="DECIMAL" />
	    <result column="repay_wait" property="repayWait" jdbcType="DECIMAL" />
	    <result column="repay_should" property="repayShould" jdbcType="DECIMAL" />
	    <result column="repay_actual" property="repayActual" jdbcType="DECIMAL" />
	    <result column="order_status" property="orderStatus" jdbcType="TINYINT" />
	    <result column="repay_actual_time" property="repayActualTime" jdbcType="INTEGER" />
	    <result column="repay_should_time" property="repayShouldTime" jdbcType="INTEGER" />
	    <result column="plan_repay_capital" property="planRepayCapital" jdbcType="DECIMAL" />
	    <result column="plan_repay_interest" property="planRepayInterest" jdbcType="DECIMAL" />
	    <result column="repay_total" property="repayTotal" jdbcType="DECIMAL" />
	    <result column="plan_wait_captical" property="planWaitCaptical" jdbcType="DECIMAL" />
	    <result column="plan_wait_interest" property="planWaitInterest" jdbcType="DECIMAL" />
	    <result column="wait_total" property="waitTotal" jdbcType="DECIMAL" />
	    <result column="service_fee" property="serviceFee" jdbcType="DECIMAL" />
	    <result column="create_user" property="createUser" jdbcType="INTEGER" />
	    <result column="create_time" property="createTime" jdbcType="INTEGER" />
	    <result column="update_user" property="updateUser" jdbcType="INTEGER" />
	    <result column="update_time" property="updateTime" jdbcType="INTEGER" />
	    <result column="del_flg" property="delFlg" jdbcType="TINYINT" />
	    <result column="recommend_name" property="recommendName" />
	    <result column="recommend_attr" property="recommendAttr" />
	    <result column="invite_user_name" property="inviteUserName" />
	    <result column="invite_user_attributename" property="inviteUserAttributeName" />
	    <result column="invite_user_regionname" property="inviteUserRegionName" />
	    <result column="invite_user_branchname" property="inviteUserBranchName" />
	    <result column="invite_user_departmentname" property="inviteUserDepartmentName" />
	    <result column="expectApr" property="expectApr" />
	    <result column="inviteUser" property="inviteUser" />
	    <result column="actualRevenue" property="actualRevenue" />
	    <result column="actualPayTotal" property="actualPayTotal" />
	    <result column="lqdServiceFee" property="lqdServiceFee" />
	    <result column="lqdServiceApr" property="lqdServiceApr" />
	    <result column="investServiceApr" property="investServiceApr" />
	    <result column="lqdProgress" property="lqdProgress" />
	    <result column="lastQuitTime" property="lastQuitTime" />
	    <result column="joinTime" property="joinTime" />
	    <result column="orderLockTime" property="orderLockTime" />
	    <result column="planName" property="planName" />
	  </resultMap>

	<select id="exportPlanRepayList" resultMap="planRepayMap" parameterType="Map">
		SELECT
			hhr.id,
			hhr.accede_order_id,
			hhr.plan_nid,
			hhr.lock_period,
			hhr.user_id,
			hhr.user_name,
			hhr.user_attribute,
			hhr.accede_account,
			hhr.repay_interest,
			hhr.repay_capital,
			hhr.repay_status,
			hhr.repay_already,
			hhr.repay_wait,
			hhr.repay_should,
			hhr.repay_actual,
			hhr.order_status,
			hhr.repay_actual_time,
			hhr.repay_should_time,
			hhr.plan_repay_capital,
			hhr.plan_repay_interest,
			hhr.repay_total,
			hhr.plan_wait_captical,
			hhr.plan_wait_interest,
			hhr.wait_total,
			hhr.service_fee,
			hhr.create_user,
			hhr.create_time,
			hhr.update_user,
			hhr.update_time,
			hha.invite_user_name AS recommend_name,
			pna.`name` AS recommend_attr,
			hha.invite_user_name,
			pna_tender.`name` AS invite_user_attributename,
			hha.invite_user_regionname,
			hha.invite_user_branchname,
			hha.invite_user_departmentname,
			hha.expect_apr AS expectApr,
			hha.invite_user_name AS inviteUser,
			hhr.actual_revenue AS actualRevenue,
			hhr.actual_pay_total AS actualPayTotal,
			hha.lqd_service_fee AS lqdServiceFee,
			hha.lqd_service_apr AS lqdServiceApr,
			hha.invest_service_apr AS investServiceApr,
			CONCAT(FORMAT(hha.lqd_progress * 100,0),'%') AS lqdProgress,
			DATE_ADD(FROM_UNIXTIME(hhr.repay_should_time),INTERVAL 3 DAY) AS lastQuitTime,
			IFNULL(hha.create_time,0) AS joinTime,
			IFNULL(hha.count_interest_time,0) AS orderLockTime,
			hhp.plan_name AS planName
		FROM
			hyjf_hjh_repay hhr
		LEFT JOIN hyjf_hjh_accede hha ON hha.accede_order_id = hhr.accede_order_id
		LEFT JOIN huiyingdai_spreads_users hydsu ON hhr.user_id = hydsu.user_id
		LEFT JOIN huiyingdai_users hu ON hydsu.spreads_userid = hu.user_id
		LEFT JOIN huiyingdai_users_info hui ON hui.user_id = hu.user_id
		LEFT JOIN hyjf_hjh_plan hhp ON hhp.plan_nid = hhr.plan_nid
		LEFT JOIN hyjf_param_name pna ON cast(hhr.user_attribute AS CHAR) = pna.name_cd
		AND pna.name_class = 'USER_PROPERTY'
		LEFT JOIN hyjf_param_name pna_tender ON cast(hha.invite_user_attribute AS CHAR) = pna_tender.name_cd 
		AND pna_tender.name_class = 'USER_PROPERTY'
		<include refid="Where_Clause_Repay" />
		ORDER BY repay_should_time desc
		<if test="limitStart != null and limitEnd !=null" >
	      LIMIT #{limitStart,jdbcType=INTEGER} , #{limitEnd,jdbcType=INTEGER}
	    </if>
	</select>

	<resultMap id="appMyHjhDetailMap" type="com.hyjf.mybatis.model.customize.app.AppMyHjhDetailCustomize" >
		<id column="plan_nid" property="planNid" jdbcType="VARCHAR" />
		<result column="plan_name" property="planName" jdbcType="VARCHAR" />
		<result column="accede_order_id" property="accedeOrderId" jdbcType="VARCHAR" />
		<result column="expect_apr" property="planApr" jdbcType="VARCHAR" />
		<result column="lock_period" property="planPeriod" jdbcType="VARCHAR" />
		<result column="user_id" property="userId" jdbcType="VARCHAR" />
		<result column="accede_account" property="accedeAccount" jdbcType="VARCHAR" />
		<result column="add_time" property="addTime" jdbcType="VARCHAR" />
		<result column="wait_captical" property="waitCaptical" jdbcType="VARCHAR" />
		<result column="wait_interest" property="waitInterest" jdbcType="VARCHAR" />
		<result column="wait_total" property="waitTotal" jdbcType="VARCHAR" />
		<result column="received_total" property="receivedTotal" jdbcType="VARCHAR" />
		<result column="repay_style" property="repayStyle" jdbcType="VARCHAR" />
		<result column="repay_method" property="repayMethod" jdbcType="VARCHAR" />
		<result column="order_status" property="orderStatus" jdbcType="VARCHAR" />
		<result column="last_payment_time" property="lastPaymentTime" jdbcType="VARCHAR" />
		<result column="count_interest_time" property="countInterestTime" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectAppMyHjhDetail" resultMap="appMyHjhDetailMap" parameterType="Map">
		SELECT
		hhp.plan_nid,
		hhp.plan_name,
		hha.accede_order_id,
		hha.expect_apr,
		<!-- hhp.lock_period, -->
		CASE
            WHEN hhp.borrow_style = 'endday'
            THEN CONCAT(hhp.lock_period, '天')
            ELSE CONCAT(hhp.lock_period, '个月')
          END AS lock_period,
		hha.user_id,
		hha.accede_account,
		FROM_UNIXTIME(hha.add_time, '%Y-%m-%d %H:%i' ) AS add_time,
		hha.wait_captical,
		hha.wait_total,
		hha.wait_interest,
		hha.received_total,
		hhp.borrow_style repay_style,
		(SELECT hbs.NAME FROM huiyingdai_borrow_style hbs where hbs.nid = hhp.borrow_style limit 1 ) repay_method,
		hha.order_status order_status,
		IFNULL(FROM_UNIXTIME(IF(hha.last_payment_time=0,NULL,hha.last_payment_time), '%Y-%m-%d' ),'--') AS last_payment_time,
		<!-- 添加计息时间 -->
		IFNULL(FROM_UNIXTIME( IF(hha.count_interest_time=0,NULL,hha.count_interest_time), '%Y-%m-%d' ),'--') AS count_interest_time
		FROM hyjf_hjh_accede hha
		LEFT JOIN hyjf_hjh_plan hhp ON hha.plan_nid=hhp.plan_nid
		WHERE hha.accede_order_id = #{accedeOrderId}
	</select>


	<sql id="Where_Clause_Repay">
		<where>
		    1=1
			<if test="planOrderId != null and planOrderId != ''">
				AND hhr.accede_order_id LIKE CONCAT('%', #{planOrderId}, '%')
			</if>
			<if test="planNidSrch != null and planNidSrch != ''">
				AND hhr.plan_nid LIKE CONCAT('%', #{planNidSrch}, '%')
			</if>
			<if test="userName != null and userName != ''">
				AND hhr.user_name LIKE CONCAT('%', #{userName}, '%')
			</if>
			<if test="refereeNameSrch != null and refereeNameSrch != ''">
				AND hha.invite_user_name LIKE CONCAT('%', #{refereeNameSrch}, '%')
			</if>
			<if test="debtLockPeriodSrch != null and debtLockPeriodSrch != ''">
				AND hhr.lock_period = #{debtLockPeriodSrch}
			</if>
			<if test="repayStatus != null">
				AND hhr.repay_status = #{repayStatus}
			</if>
			<if test="orderStatusSrch != null">
				AND hhr.order_status = #{orderStatusSrch}
			</if>
			<if test="borrowStyleSrch != null and borrowStyleSrch != ''">
				AND hhp.borrow_style = #{borrowStyleSrch}
			</if>
			<if test="repayTimeStart != null and repayTimeStart != ''">
				AND hhr.repay_should_time >= #{repayTimeStart}
			</if>
			<if test="repayTimeEnd != null and repayTimeEnd != ''">
				AND hhr.repay_should_time <![CDATA[<=]]> #{repayTimeEnd}
			</if>
			<if test="actulRepayTimeStart != null and actulRepayTimeStart != ''">
				AND hhr.repay_actual_time >= #{actulRepayTimeStart}
			</if>
			<if test="actulRepayTimeEnd != null and actulRepayTimeEnd != ''">
				AND hhr.repay_actual_time <![CDATA[<=]]> #{actulRepayTimeEnd}
			</if>
		</where>
	</sql>
	
	<update id="updateOfPlanRepay" parameterType="com.hyjf.mybatis.model.auto.Account">
		update huiyingdai_account
		set
		bank_total = IFNULL(bank_total,0) + #{bankTotal,jdbcType=DECIMAL},
		bank_frost = IFNULL(bank_frost,0) - #{bankFrost,jdbcType=DECIMAL},
		bank_await = IFNULL(bank_await,0) + #{bankAwait,jdbcType=DECIMAL},
		bank_await_capital = IFNULL(bank_await_capital,0) + #{bankAwaitCapital,jdbcType=DECIMAL},
		bank_await_interest = IFNULL(bank_await_interest,0) + #{bankAwaitInterest,jdbcType=DECIMAL},
		bank_invest_sum = IFNULL(bank_invest_sum,0) + #{bankInvestSum,jdbcType=DECIMAL},
		bank_frost_cash = IFNULL(bank_frost_cash,0) - #{bankFrostCash,jdbcType=DECIMAL}
		where
		user_id = #{userId,jdbcType=INTEGER}
	</update>  
			
			
	<select id="getAccdeAcount" resultType="DECIMAL" parameterType="java.lang.String">
		SELECT
			accede_account
		FROM
			hyjf_hjh_accede 
		WHERE
			accede_order_id = #{accedeOrderId,jdbcType=VARCHAR}
		
	</select>

	<update id="updateOfHjhPlanJoin" parameterType="com.hyjf.mybatis.model.auto.Account">
		UPDATE huiyingdai_account
		SET
		bank_invest_sum = IFNULL(bank_invest_sum,0) + #{bankInvestSum,jdbcType=DECIMAL},
		bank_balance = IFNULL(bank_balance,0) - #{bankBalance,jdbcType=DECIMAL},
		plan_balance = IFNULL(plan_balance,0) + #{planBalance,jdbcType=DECIMAL}
		WHERE
		 user_id = #{userId,jdbcType=INTEGER}
		 AND bank_balance -  #{bankBalance,jdbcType=DECIMAL} >= 0
	</update>
</mapper>