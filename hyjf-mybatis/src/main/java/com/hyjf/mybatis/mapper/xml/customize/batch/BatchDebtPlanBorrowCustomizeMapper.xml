<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hyjf.mybatis.mapper.customize.batch.BatchDebtPlanBorrowCustomizeMapper">

	<resultMap id="DebtPlanBorrow" type="com.hyjf.mybatis.model.customize.batch.BatchDebtPlanBorrowCustomize">
		<id column="borrow_nid" property="borrowNid" jdbcType="VARCHAR" />
		<result column="borrow_name" property="borrowName" jdbcType="VARCHAR" />
		<result column="borrow_apr" property="borrowApr" jdbcType="VARCHAR" />
		<result column="borrow_account" property="borrowAccount" jdbcType="VARCHAR" />
		<result column="borrow_account_wait" property="borrowAccountWait" jdbcType="VARCHAR" />
		<result column="borrow_schedule" property="borrowSchedule" jdbcType="VARCHAR" />
		<result column="tstatus" property="status" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Rule_Where_Clause">
		<where>
			AND dpb.del_flag = 0
			AND dpb.add_type = 0
			AND dpb.type = 0
			AND hydb.user_id <![CDATA[<>]]>#{userId,jdbcType=INTEGER}
			<!-- 获取 投资中 -->
			AND ( hydb.`status` = 1 AND hydb.borrow_status = 1 AND hydb.borrow_account_yes <![CDATA[<]]> hydb.account AND hydb.verify_time + ( hydb.borrow_valid_time * 24 * 60 *60 ) <![CDATA[>]]> UNIX_TIMESTAMP( NOW() ) )
			AND hydb.borrow_account_wait > 0
			<if test="accedeInvestMin != null and accedeInvestMin != ''">
				AND hydb.borrow_account_wait <![CDATA[>=]]> #{accedeInvestMin,jdbcType=DECIMAL}
			</if>
			<if test="accedeInvestMax != null and accedeInvestMax != ''">
				AND hydb.borrow_account_wait <![CDATA[<=]]> #{accedeInvestMax,jdbcType=DECIMAL}
			</if>
			<if test="planNid != null and planNid != ''">
				AND dp.debt_plan_nid = #{planNid,jdbcType=VARCHAR}
			</if>
			AND (
				NOT EXISTS (
					SELECT
						1
					FROM
						hyjf_debt_invest di
					WHERE
						di.user_id = #{userId,jdbcType=VARCHAR}
					AND di.`status` = 0
					AND di.borrow_nid = hydb.borrow_nid
					AND di.plan_nid = #{planNid,jdbcType=VARCHAR}
					AND di.plan_order_id = #{accedeOrderId,jdbcType=VARCHAR}
				)
			)
		</where>
	</sql>
	<select id="selectRuleDebtPlanBorrow" resultMap="DebtPlanBorrow" parameterType="Map">
		SELECT
			hydb.borrow_nid,
			hydb.`name` AS borrow_name,
			hydb.borrow_apr,
			hydb.account AS borrow_account,
			hydb.borrow_account_wait AS borrow_account_wait,
			hydb.borrow_account_scale AS borrow_schedule,
			CASE 
				WHEN hydb.`status` = 0 AND hydb.verify_status = 1 THEN '10'
				WHEN hydb.`status` = 1 AND hydb.borrow_status = 1 AND hydb.borrow_account_yes <![CDATA[<]]> hydb.account AND ( hydb.verify_time + ( hydb.borrow_valid_time * 24 * 60 *60 ) <![CDATA[>]]> UNIX_TIMESTAMP( NOW() ) ) THEN '11'
				WHEN hydb.`status` = 1 AND hydb.reverify_time = '0' AND ((hydb.reverify_status = 0 AND hydb.borrow_account_yes <![CDATA[>=]]> hydb.account) OR (hydb.verify_time + ( hydb.borrow_valid_time * 24 * 60 * 60) <![CDATA[<]]> UNIX_TIMESTAMP(NOW()))) THEN '12'
        		WHEN hydb.`status` = 3 AND hydb.repay_full_status = 0 THEN '13'
        		<!-- WHEN hydb.`status` = 3 AND hydb.repay_full_status = 1 THEN '14' -->
			ELSE
			  ''
			END AS tstatus
		FROM
			hyjf_debt_borrow hydb
		INNER JOIN hyjf_debt_plan_borrow dpb ON hydb.borrow_nid = dpb.borrow_nid
		INNER JOIN hyjf_debt_plan dp ON dp.debt_plan_nid = dpb.debt_plan_nid
		<include refid="Rule_Where_Clause" />
		ORDER BY hydb.borrow_account_wait ASC
		<if test="limitStart != null and limitEnd !=null" >
	      LIMIT #{limitStart,jdbcType=INTEGER} , #{limitEnd,jdbcType=INTEGER}
	    </if>
	</select>
	<select id="selectRuleDebtPlanBorrowSum" resultType="java.math.BigDecimal" parameterType="Map">
		SELECT
			SUM(hydb.borrow_account_wait)
		FROM
			hyjf_debt_borrow hydb
		INNER JOIN hyjf_debt_plan_borrow dpb ON hydb.borrow_nid = dpb.borrow_nid
		INNER JOIN hyjf_debt_plan dp ON dp.debt_plan_nid = dpb.debt_plan_nid
		<include refid="Rule_Where_Clause" />
	</select>
	<sql id="Unrule_Where_Clause">
		<where>
			AND dpb.del_flag = 0
			AND dpb.add_type = 0
			AND dpb.type = 0
			AND hydb.user_id <![CDATA[<>]]>#{userId,jdbcType=INTEGER}
			<!-- 获取 投资中 -->
			AND ( hydb.`status` = 1 AND hydb.borrow_status = 1 AND hydb.borrow_account_yes <![CDATA[<]]> hydb.account AND hydb.verify_time + ( hydb.borrow_valid_time * 24 * 60 *60 ) <![CDATA[>]]> UNIX_TIMESTAMP( NOW() ) )
			AND hydb.borrow_account_wait > 0
			<if test="accedeInvestMin != null and accedeInvestMin != ''">
				AND hydb.borrow_account_wait <![CDATA[>=]]> #{accedeInvestMin,jdbcType=DECIMAL}
			</if>
			<if test="accedeInvestMax != null and accedeInvestMax != ''">
				AND hydb.borrow_account_wait <![CDATA[<=]]> #{accedeInvestMax,jdbcType=DECIMAL}
			</if>
			<if test="planNid != null and planNid != ''">
				AND dp.debt_plan_nid = #{planNid,jdbcType=VARCHAR}
			</if>
		</where>
	</sql>
	<select id="selectUnruleDebtPlanBorrow" resultMap="DebtPlanBorrow" parameterType="Map">
		SELECT
			hydb.borrow_nid,
			hydb.`name` AS borrow_name,
			hydb.borrow_apr,
			hydb.account AS borrow_account,
			hydb.borrow_account_wait AS borrow_account_wait,
			hydb.borrow_account_scale AS borrow_schedule,
			CASE 
				WHEN hydb.`status` = 0 AND hydb.verify_status = 1 THEN '10'
				WHEN hydb.`status` = 1 AND hydb.borrow_status = 1 AND hydb.borrow_account_yes <![CDATA[<]]> hydb.account AND ( hydb.verify_time + ( hydb.borrow_valid_time * 24 * 60 *60 ) <![CDATA[>]]> UNIX_TIMESTAMP( NOW() ) ) THEN '11'
				WHEN hydb.`status` = 1 AND hydb.reverify_time = '0' AND ((hydb.reverify_status = 0 AND hydb.borrow_account_yes <![CDATA[>=]]> hydb.account) OR (hydb.verify_time + ( hydb.borrow_valid_time * 24 * 60 * 60) <![CDATA[<]]> UNIX_TIMESTAMP(NOW()))) THEN '12'
        		WHEN hydb.`status` = 3 AND hydb.repay_full_status = 0 THEN '13'
        		<!-- WHEN hydb.`status` = 3 AND hydb.repay_full_status = 1 THEN '14' -->
			ELSE
			  ''
			END AS tstatus
		FROM
			hyjf_debt_borrow hydb
		INNER JOIN hyjf_debt_plan_borrow dpb ON hydb.borrow_nid = dpb.borrow_nid
		INNER JOIN hyjf_debt_plan dp ON dp.debt_plan_nid = dpb.debt_plan_nid
		<include refid="Unrule_Where_Clause" />
		ORDER BY hydb.borrow_account_wait ASC
		<if test="limitStart != null and limitEnd !=null" >
	      LIMIT #{limitStart,jdbcType=INTEGER} , #{limitEnd,jdbcType=INTEGER}
	    </if>
	</select>
	
	<select id="selectUnrulePlanBorrowSum" resultType="java.math.BigDecimal" parameterType="Map">
		SELECT
			SUM(hydb.borrow_account_wait)
		FROM
			hyjf_debt_borrow hydb
		INNER JOIN hyjf_debt_plan_borrow dpb ON hydb.borrow_nid = dpb.borrow_nid
		INNER JOIN hyjf_debt_plan dp ON dp.debt_plan_nid = dpb.debt_plan_nid
		<include refid="Unrule_Where_Clause" />
	</select>
	
	<sql id="Reinvest_Where_Clause">
		<where>
			AND hydb.user_id <![CDATA[<>]]>#{userId,jdbcType=INTEGER}
			<!-- 获取 投资中 -->
			AND ( hydb.`status` = 1 AND hydb.borrow_status = 1 AND hydb.borrow_account_yes <![CDATA[<]]> hydb.account AND hydb.verify_time + ( hydb.borrow_valid_time * 24 * 60 *60 ) <![CDATA[>]]> UNIX_TIMESTAMP( NOW() ) )
			AND hydb.borrow_account_wait > 0
			<if test="accedeInvestMin != null and accedeInvestMin != ''">
				AND hydb.borrow_account_wait <![CDATA[>=]]> #{accedeInvestMin,jdbcType=DECIMAL}
			</if>
			<if test="accedeInvestMax != null and accedeInvestMax != ''">
				AND hydb.borrow_account_wait <![CDATA[<=]]> #{accedeInvestMax,jdbcType=DECIMAL}
			</if>
			AND (
				NOT EXISTS (
					SELECT
						1
					FROM
						hyjf_debt_invest di
					WHERE
						di.user_id = #{userId,jdbcType=VARCHAR}
					AND di.`status` = 0
					AND di.borrow_nid = hydb.borrow_nid
					AND di.plan_order_id = #{accedeOrderId,jdbcType=VARCHAR}
				)
			)
		</where>
	</sql>
	<select id="selectReInvestDebtPlanBorrow" resultMap="DebtPlanBorrow" parameterType="Map">
		SELECT
			hydb.borrow_nid,
			hydb.`name` AS borrow_name,
			hydb.borrow_apr,
			hydb.account AS borrow_account,
			hydb.borrow_account_wait AS borrow_account_wait,
			hydb.borrow_account_scale AS borrow_schedule,
			CASE 
				WHEN hydb.`status` = 0 AND hydb.verify_status = 1 THEN '10'
				WHEN hydb.`status` = 1 AND hydb.borrow_status = 1 AND hydb.borrow_account_yes <![CDATA[<]]> hydb.account AND ( hydb.verify_time + ( hydb.borrow_valid_time * 24 * 60 *60 ) <![CDATA[>]]> UNIX_TIMESTAMP( NOW() ) ) THEN '11'
				WHEN hydb.`status` = 1 AND hydb.reverify_time = '0' AND ((hydb.reverify_status = 0 AND hydb.borrow_account_yes <![CDATA[>=]]> hydb.account) OR (hydb.verify_time + ( hydb.borrow_valid_time * 24 * 60 * 60) <![CDATA[<]]> UNIX_TIMESTAMP(NOW()))) THEN '12'
        		WHEN hydb.`status` = 3 AND hydb.repay_full_status = 0 THEN '13'
        		<!-- WHEN hydb.`status` = 3 AND hydb.repay_full_status = 1 THEN '14' -->
			ELSE
			  ''
			END AS tstatus
		FROM
			hyjf_debt_borrow hydb
		<include refid="Reinvest_Where_Clause" />
		ORDER BY hydb.borrow_account_wait ASC
		<if test="limitStart != null and limitEnd !=null" >
	      LIMIT #{limitStart,jdbcType=INTEGER} , #{limitEnd,jdbcType=INTEGER}
	    </if>
	</select>
	<select id="selectReInvestPlanBorrowSum" resultType="java.math.BigDecimal" parameterType="Map">
		SELECT
			SUM(hydb.borrow_account_wait)
		FROM
			hyjf_debt_borrow hydb
		<include refid="Reinvest_Where_Clause" />
	</select>
	<select id="selectDebtPlanBorrowUnfull" resultMap="DebtPlanBorrow" parameterType="java.lang.Integer">
		SELECT
			hydb.borrow_nid,
			hydb.`name` AS borrow_name,
			hydb.borrow_apr,
			hydb.account AS borrow_account,
			hydb.borrow_account_wait AS borrow_account_wait,
			hydb.borrow_account_scale AS borrow_schedule,
			CASE 
				WHEN hydb.`status` = 0 AND hydb.verify_status = 1 THEN '10'
				WHEN hydb.`status` = 1 AND hydb.borrow_status = 1 AND hydb.borrow_account_yes <![CDATA[<]]> hydb.account AND ( hydb.verify_time + ( hydb.borrow_valid_time * 24 * 60 *60 ) <![CDATA[>]]> UNIX_TIMESTAMP( NOW() ) ) THEN '11'
				WHEN hydb.`status` = 1 AND hydb.reverify_time = '0' AND ((hydb.reverify_status = 0 AND hydb.borrow_account_yes <![CDATA[>=]]> hydb.account) OR (hydb.verify_time + ( hydb.borrow_valid_time * 24 * 60 * 60) <![CDATA[<]]> UNIX_TIMESTAMP(NOW()))) THEN '12'
        		WHEN hydb.`status` = 3 AND hydb.repay_full_status = 0 THEN '13'
        		<!-- WHEN hydb.`status` = 3 AND hydb.repay_full_status = 1 THEN '14' -->
			ELSE
			  ''
			END AS tstatus
		FROM
			hyjf_debt_borrow hydb
		<where>
			( hydb.`status` = 1 AND hydb.borrow_status = 1 AND hydb.borrow_account_yes <![CDATA[<]]> hydb.account AND hydb.verify_time + ( hydb.borrow_valid_time * 24 * 60 *60 ) <![CDATA[>]]> UNIX_TIMESTAMP( NOW() ) )
			AND hydb.borrow_full_status = 0
			AND hydb.verify_time + ( #{num,jdbcType=INTEGER} * 24 * 60 *60 ) <![CDATA[<=]]> UNIX_TIMESTAMP( NOW() ) 
		</where>
	</select>
</mapper>