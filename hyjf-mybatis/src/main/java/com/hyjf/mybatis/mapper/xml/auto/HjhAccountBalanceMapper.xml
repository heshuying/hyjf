<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hyjf.mybatis.mapper.auto.HjhAccountBalanceMapper" >
  <resultMap id="BaseResultMap" type="com.hyjf.mybatis.model.auto.HjhAccountBalance" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="date" property="date" jdbcType="DATE" />
    <result column="invest_account" property="investAccount" jdbcType="DECIMAL" />
    <result column="credit_account" property="creditAccount" jdbcType="DECIMAL" />
    <result column="reinvest_account" property="reinvestAccount" jdbcType="DECIMAL" />
    <result column="add_account" property="addAccount" jdbcType="DECIMAL" />
    <result column="create_user" property="createUser" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="INTEGER" />
    <result column="update_user" property="updateUser" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="INTEGER" />
    <result column="del_flg" property="delFlg" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, `date`, invest_account, credit_account, reinvest_account, add_account, create_user, 
    create_time, update_user, update_time, del_flg
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hyjf.mybatis.model.auto.HjhAccountBalanceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hyjf_hjh_account_balance
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from hyjf_hjh_account_balance
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from hyjf_hjh_account_balance
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hyjf.mybatis.model.auto.HjhAccountBalanceExample" >
    delete from hyjf_hjh_account_balance
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hyjf.mybatis.model.auto.HjhAccountBalance" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hyjf_hjh_account_balance (`date`, invest_account, credit_account, 
      reinvest_account, add_account, create_user, 
      create_time, update_user, update_time, 
      del_flg)
    values (#{date,jdbcType=DATE}, #{investAccount,jdbcType=DECIMAL}, #{creditAccount,jdbcType=DECIMAL}, 
      #{reinvestAccount,jdbcType=DECIMAL}, #{addAccount,jdbcType=DECIMAL}, #{createUser,jdbcType=INTEGER}, 
      #{createTime,jdbcType=INTEGER}, #{updateUser,jdbcType=INTEGER}, #{updateTime,jdbcType=INTEGER}, 
      #{delFlg,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.hyjf.mybatis.model.auto.HjhAccountBalance" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hyjf_hjh_account_balance
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="date != null" >
        `date`,
      </if>
      <if test="investAccount != null" >
        invest_account,
      </if>
      <if test="creditAccount != null" >
        credit_account,
      </if>
      <if test="reinvestAccount != null" >
        reinvest_account,
      </if>
      <if test="addAccount != null" >
        add_account,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="delFlg != null" >
        del_flg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="date != null" >
        #{date,jdbcType=DATE},
      </if>
      <if test="investAccount != null" >
        #{investAccount,jdbcType=DECIMAL},
      </if>
      <if test="creditAccount != null" >
        #{creditAccount,jdbcType=DECIMAL},
      </if>
      <if test="reinvestAccount != null" >
        #{reinvestAccount,jdbcType=DECIMAL},
      </if>
      <if test="addAccount != null" >
        #{addAccount,jdbcType=DECIMAL},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="delFlg != null" >
        #{delFlg,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hyjf.mybatis.model.auto.HjhAccountBalanceExample" resultType="java.lang.Integer" >
    select count(*) from hyjf_hjh_account_balance
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update hyjf_hjh_account_balance
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.date != null" >
        `date` = #{record.date,jdbcType=DATE},
      </if>
      <if test="record.investAccount != null" >
        invest_account = #{record.investAccount,jdbcType=DECIMAL},
      </if>
      <if test="record.creditAccount != null" >
        credit_account = #{record.creditAccount,jdbcType=DECIMAL},
      </if>
      <if test="record.reinvestAccount != null" >
        reinvest_account = #{record.reinvestAccount,jdbcType=DECIMAL},
      </if>
      <if test="record.addAccount != null" >
        add_account = #{record.addAccount,jdbcType=DECIMAL},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
      <if test="record.updateUser != null" >
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=INTEGER},
      </if>
      <if test="record.delFlg != null" >
        del_flg = #{record.delFlg,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update hyjf_hjh_account_balance
    set id = #{record.id,jdbcType=INTEGER},
      `date` = #{record.date,jdbcType=DATE},
      invest_account = #{record.investAccount,jdbcType=DECIMAL},
      credit_account = #{record.creditAccount,jdbcType=DECIMAL},
      reinvest_account = #{record.reinvestAccount,jdbcType=DECIMAL},
      add_account = #{record.addAccount,jdbcType=DECIMAL},
      create_user = #{record.createUser,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=INTEGER},
      update_user = #{record.updateUser,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=INTEGER},
      del_flg = #{record.delFlg,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hyjf.mybatis.model.auto.HjhAccountBalance" >
    update hyjf_hjh_account_balance
    <set >
      <if test="date != null" >
        `date` = #{date,jdbcType=DATE},
      </if>
      <if test="investAccount != null" >
        invest_account = #{investAccount,jdbcType=DECIMAL},
      </if>
      <if test="creditAccount != null" >
        credit_account = #{creditAccount,jdbcType=DECIMAL},
      </if>
      <if test="reinvestAccount != null" >
        reinvest_account = #{reinvestAccount,jdbcType=DECIMAL},
      </if>
      <if test="addAccount != null" >
        add_account = #{addAccount,jdbcType=DECIMAL},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="delFlg != null" >
        del_flg = #{delFlg,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hyjf.mybatis.model.auto.HjhAccountBalance" >
    update hyjf_hjh_account_balance
    set `date` = #{date,jdbcType=DATE},
      invest_account = #{investAccount,jdbcType=DECIMAL},
      credit_account = #{creditAccount,jdbcType=DECIMAL},
      reinvest_account = #{reinvestAccount,jdbcType=DECIMAL},
      add_account = #{addAccount,jdbcType=DECIMAL},
      create_user = #{createUser,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=INTEGER},
      update_user = #{updateUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=INTEGER},
      del_flg = #{delFlg,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>