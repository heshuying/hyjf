<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hyjf.mybatis.mapper.auto.OperationReportMapper" >
  <resultMap id="BaseResultMap" type="com.hyjf.mybatis.model.auto.OperationReport" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="cn_name" property="cnName" jdbcType="VARCHAR" />
    <result column="en_name" property="enName" jdbcType="VARCHAR" />
    <result column="year" property="year" jdbcType="VARCHAR" />
    <result column="operation_report_type" property="operationReportType" jdbcType="TINYINT" />
    <result column="all_amount" property="allAmount" jdbcType="DECIMAL" />
    <result column="all_profit" property="allProfit" jdbcType="DECIMAL" />
    <result column="regist_num" property="registNum" jdbcType="BIGINT" />
    <result column="success_deal_num" property="successDealNum" jdbcType="INTEGER" />
    <result column="operation_amount" property="operationAmount" jdbcType="DECIMAL" />
    <result column="operation_profit" property="operationProfit" jdbcType="DECIMAL" />
    <result column="is_release" property="isRelease" jdbcType="TINYINT" />
    <result column="is_delete" property="isDelete" jdbcType="TINYINT" />
    <result column="release_time" property="releaseTime" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="INTEGER" />
    <result column="update_user_id" property="updateUserId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="INTEGER" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, cn_name, en_name, operation_report_type, all_amount, all_profit, regist_num,
    success_deal_num, operation_amount, operation_profit, is_release, is_delete, release_time,
    update_time, update_user_id, create_time, create_user_id,year
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hyjf.mybatis.model.auto.OperationReportExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hyjf_operation_report
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from hyjf_operation_report
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from hyjf_operation_report
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hyjf.mybatis.model.auto.OperationReportExample" >
    delete from hyjf_operation_report
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hyjf.mybatis.model.auto.OperationReport" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hyjf_operation_report (cn_name, en_name, operation_report_type,
    all_amount, all_profit, regist_num,
    success_deal_num, operation_amount, operation_profit,
    is_release, is_delete, release_time,
    update_time, update_user_id, create_time,
    create_user_id, year)
    values (#{cnName,jdbcType=VARCHAR}, #{enName,jdbcType=VARCHAR}, #{operationReportType,jdbcType=TINYINT},
    #{allAmount,jdbcType=DECIMAL}, #{allProfit,jdbcType=DECIMAL}, #{registNum,jdbcType=BIGINT},
    #{successDealNum,jdbcType=INTEGER}, #{operationAmount,jdbcType=DECIMAL}, #{operationProfit,jdbcType=DECIMAL},
    #{isRelease,jdbcType=TINYINT}, #{isDelete,jdbcType=TINYINT}, #{releaseTime,jdbcType=INTEGER},
    #{updateTime,jdbcType=INTEGER}, #{updateUserId,jdbcType=INTEGER}, #{createTime,jdbcType=INTEGER},
    #{createUserId,jdbcType=INTEGER},#{year,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hyjf.mybatis.model.auto.OperationReport" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hyjf_operation_report
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="cnName != null" >
        cn_name,
      </if>
      <if test="enName != null" >
        en_name,
      </if>
      <if test="year != null" >
        year,
      </if>
      <if test="operationReportType != null" >
        operation_report_type,
      </if>
      <if test="allAmount != null" >
        all_amount,
      </if>
      <if test="allProfit != null" >
        all_profit,
      </if>
      <if test="registNum != null" >
        regist_num,
      </if>
      <if test="successDealNum != null" >
        success_deal_num,
      </if>
      <if test="operationAmount != null" >
        operation_amount,
      </if>
      <if test="operationProfit != null" >
        operation_profit,
      </if>
      <if test="isRelease != null" >
        is_release,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="releaseTime != null" >
        release_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="cnName != null" >
        #{cnName,jdbcType=VARCHAR},
      </if>
      <if test="enName != null" >
        #{enName,jdbcType=VARCHAR},
      </if>
      <if test="year != null" >
        #{year,jdbcType=VARCHAR},
      </if>
      <if test="operationReportType != null" >
        #{operationReportType,jdbcType=TINYINT},
      </if>
      <if test="allAmount != null" >
        #{allAmount,jdbcType=DECIMAL},
      </if>
      <if test="allProfit != null" >
        #{allProfit,jdbcType=DECIMAL},
      </if>
      <if test="registNum != null" >
        #{registNum,jdbcType=BIGINT},
      </if>
      <if test="successDealNum != null" >
        #{successDealNum,jdbcType=INTEGER},
      </if>
      <if test="operationAmount != null" >
        #{operationAmount,jdbcType=DECIMAL},
      </if>
      <if test="operationProfit != null" >
        #{operationProfit,jdbcType=DECIMAL},
      </if>
      <if test="isRelease != null" >
        #{isRelease,jdbcType=TINYINT},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="releaseTime != null" >
        #{releaseTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hyjf.mybatis.model.auto.OperationReportExample" resultType="java.lang.Integer" >
    select count(*) from hyjf_operation_report
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update hyjf_operation_report
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cnName != null" >
        cn_name = #{record.cnName,jdbcType=VARCHAR},
      </if>
      <if test="record.enName != null" >
        en_name = #{record.enName,jdbcType=VARCHAR},
      </if>
      <if test="record.year != null" >
        year = #{record.year,jdbcType=VARCHAR},
      </if>
      <if test="record.operationReportType != null" >
        operation_report_type = #{record.operationReportType,jdbcType=TINYINT},
      </if>
      <if test="record.allAmount != null" >
        all_amount = #{record.allAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.allProfit != null" >
        all_profit = #{record.allProfit,jdbcType=DECIMAL},
      </if>
      <if test="record.registNum != null" >
        regist_num = #{record.registNum,jdbcType=BIGINT},
      </if>
      <if test="record.successDealNum != null" >
        success_deal_num = #{record.successDealNum,jdbcType=INTEGER},
      </if>
      <if test="record.operationAmount != null" >
        operation_amount = #{record.operationAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.operationProfit != null" >
        operation_profit = #{record.operationProfit,jdbcType=DECIMAL},
      </if>
      <if test="record.isRelease != null" >
        is_release = #{record.isRelease,jdbcType=TINYINT},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=TINYINT},
      </if>
      <if test="record.releaseTime != null" >
        release_time = #{record.releaseTime,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=INTEGER},
      </if>
      <if test="record.updateUserId != null" >
        update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update hyjf_operation_report
    set id = #{record.id,jdbcType=INTEGER},
    cn_name = #{record.cnName,jdbcType=VARCHAR},
    en_name = #{record.enName,jdbcType=VARCHAR},
    year = #{record.year,jdbcType=VARCHAR},
    operation_report_type = #{record.operationReportType,jdbcType=TINYINT},
    all_amount = #{record.allAmount,jdbcType=DECIMAL},
    all_profit = #{record.allProfit,jdbcType=DECIMAL},
    regist_num = #{record.registNum,jdbcType=BIGINT},
    success_deal_num = #{record.successDealNum,jdbcType=INTEGER},
    operation_amount = #{record.operationAmount,jdbcType=DECIMAL},
    operation_profit = #{record.operationProfit,jdbcType=DECIMAL},
    is_release = #{record.isRelease,jdbcType=TINYINT},
    is_delete = #{record.isDelete,jdbcType=TINYINT},
    release_time = #{record.releaseTime,jdbcType=INTEGER},
    update_time = #{record.updateTime,jdbcType=INTEGER},
    update_user_id = #{record.updateUserId,jdbcType=INTEGER},
    create_time = #{record.createTime,jdbcType=INTEGER},
    create_user_id = #{record.createUserId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hyjf.mybatis.model.auto.OperationReport" >
    update hyjf_operation_report
    <set >
      <if test="cnName != null" >
        cn_name = #{cnName,jdbcType=VARCHAR},
      </if>
      <if test="enName != null" >
        en_name = #{enName,jdbcType=VARCHAR},
      </if>
      <if test="year != null" >
        year = #{year,jdbcType=VARCHAR},
      </if>
      <if test="operationReportType != null" >
        operation_report_type = #{operationReportType,jdbcType=TINYINT},
      </if>
      <if test="allAmount != null" >
        all_amount = #{allAmount,jdbcType=DECIMAL},
      </if>
      <if test="allProfit != null" >
        all_profit = #{allProfit,jdbcType=DECIMAL},
      </if>
      <if test="registNum != null" >
        regist_num = #{registNum,jdbcType=BIGINT},
      </if>
      <if test="successDealNum != null" >
        success_deal_num = #{successDealNum,jdbcType=INTEGER},
      </if>
      <if test="operationAmount != null" >
        operation_amount = #{operationAmount,jdbcType=DECIMAL},
      </if>
      <if test="operationProfit != null" >
        operation_profit = #{operationProfit,jdbcType=DECIMAL},
      </if>
      <if test="isRelease != null" >
        is_release = #{isRelease,jdbcType=TINYINT},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="releaseTime != null" >
        release_time = #{releaseTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hyjf.mybatis.model.auto.OperationReport" >
    update hyjf_operation_report
    set cn_name = #{cnName,jdbcType=VARCHAR},
    en_name = #{enName,jdbcType=VARCHAR},
    year = #{year,jdbcType=VARCHAR},
    operation_report_type = #{operationReportType,jdbcType=TINYINT},
    all_amount = #{allAmount,jdbcType=DECIMAL},
    all_profit = #{allProfit,jdbcType=DECIMAL},
    regist_num = #{registNum,jdbcType=BIGINT},
    success_deal_num = #{successDealNum,jdbcType=INTEGER},
    operation_amount = #{operationAmount,jdbcType=DECIMAL},
    operation_profit = #{operationProfit,jdbcType=DECIMAL},
    is_release = #{isRelease,jdbcType=TINYINT},
    is_delete = #{isDelete,jdbcType=TINYINT},
    release_time = #{releaseTime,jdbcType=INTEGER},
    update_time = #{updateTime,jdbcType=INTEGER},
    update_user_id = #{updateUserId,jdbcType=INTEGER},
    create_time = #{createTime,jdbcType=INTEGER},
    create_user_id = #{createUserId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>