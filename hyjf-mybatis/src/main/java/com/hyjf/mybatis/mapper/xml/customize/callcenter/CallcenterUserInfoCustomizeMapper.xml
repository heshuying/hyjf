<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hyjf.mybatis.mapper.customize.callcenter.CallcenterUserInfoCustomizeMapper">

	<sql id="Where_Clause">
		<where>
			<if test="userId != null and userId !=''">
				AND t.user_id = #{userId}
			</if>
			<if test="borrowerType != null and borrowerType !=''">
				AND t.borrower_type = #{borrowerType}
			</if>
			<if test="userName != null and userName !=''">
				AND t.user_name LIKE CONCAT('%', #{userName}, '%')
			</if>
			<if test="realName != null and realName != ''">
				AND t.real_name LIKE CONCAT('%', #{realName}, '%')
			</if>
			<if test="recommendName != null and recommendName != ''">
				AND t.recommend_name LIKE CONCAT('%', #{recommendName}, '%')
			</if>
			<if test="mobile != null and mobile != ''">
				AND t.mobile LIKE CONCAT('%', #{mobile}, '%')
			</if>
			<if test="userRole != null and userRole != ''">
				AND t.role_id = #{userRole,jdbcType=INTEGER}
			</if>
			<if test="userType != null and userType != ''">
				AND t.type_id = #{userType,jdbcType=INTEGER}
			</if>
			<if test="userProperty != null and userProperty != ''">
				AND t.attribute = #{userProperty,jdbcType=INTEGER}
			</if>
			<!-- 无法判断江西银行开户状态 -->
			<!-- <if test="accountStatus != null and accountStatus != ''">
				AND t.open_account = #{accountStatus,jdbcType=INTEGER}
			</if> -->
			<if test="accountStatus != null and accountStatus != ''">
				AND t.bank_open_account = #{accountStatus,jdbcType=INTEGER}
			</if>
			<if test="userStatus != null and userStatus != ''">
				AND t.`status` = #{userStatus,jdbcType=INTEGER}
			</if>
			<if test="registPlat != null and registPlat != ''">
				AND t.reg_esb = #{registPlat,jdbcType=INTEGER}
			</if>
			<if test="is51 != null and is51 != ''">
				AND t.is51_cd = #{is51,jdbcType=INTEGER}
			</if>
			<if test="vipType != null and vipType == 1">
				AND t.vipid IS NULL
			</if>
			<if test="vipType != null and vipType == 2">
				AND t.vipid IS NOT NULL
			</if>
			<if test="regTimeStart != null and regTimeStart != '' ">
				AND FROM_UNIXTIME( t.regTime, '%Y-%m-%d' ) <![CDATA[>=]]> #{regTimeStart}
			</if>
			<if test="regTimeEnd != null and regTimeEnd != ''">
				AND FROM_UNIXTIME( t.regTime, '%Y-%m-%d' ) <![CDATA[<=]]> #{regTimeEnd}
			</if>
			<if test="combotreeListSrch != null and combotreeListSrch != ''">
				AND od.id in
				<foreach collection="combotreeListSrch" open="(" close=")" separator="," item="dep">
					#{dep}
				</foreach>
			</if>
		</where>
	</sql>
	<resultMap id="UserListPOMap" type="com.hyjf.mybatis.model.customize.callcenter.CallcenterUserBaseCustomize">
		<id column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="real_name" property="realName" jdbcType="VARCHAR" />
		<result column="mobile" property="mobile" jdbcType="VARCHAR" />
		<result column="vip_type" property="vipType" jdbcType="VARCHAR" />
		<result column="user_role" property="userRole" jdbcType="VARCHAR" />
		<result column="user_type" property="userType" jdbcType="VARCHAR" />
		<result column="user_property" property="userProperty" jdbcType="VARCHAR" />
		<result column="account_status" property="accountStatus" jdbcType="VARCHAR" />
		<result column="open_account" property="openAccount" jdbcType="VARCHAR" />
		<result column="bank_open_account" property="bankOpenAccount" jdbcType="VARCHAR" />
		<result column="bank_open_time" property="bankOpenTime" jdbcType="VARCHAR" />
		<result column="bank_account" property="bankAccount" jdbcType="VARCHAR" />
		<result column="is51" property="is51" jdbcType="INTEGER" />
		<result column="user_status" property="userStatus" jdbcType="VARCHAR" />
		<result column="recommend_name" property="recommendName" jdbcType="VARCHAR" />
		<result column="regist_plat" property="registPlat" jdbcType="VARCHAR" />
		<result column="reg_time" property="regTime" jdbcType="VARCHAR" />
		<result column="regionName" property="regionName" /> <!-- 大区 -->
		<result column="branchName" property="branchName" /> <!-- 分公司  -->
		<result column="departmentName" property="departmentName" /> <!-- 部门  -->
		<result column="borrower_type" property="borrowerType"  jdbcType="INTEGER" />
		<result column="sex" property="sex"  jdbcType="VARCHAR" />
		<result column="birthday" property="birthday"  jdbcType="VARCHAR" />
		<result column="regist_area" property="registArea"  jdbcType="VARCHAR" />
		<result column="idcard" property="idcard"  jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectUserList" resultMap="UserListPOMap" parameterType="Map">
		SELECT
			t.*,
		    `od3`.`name` AS `regionName`,
			`od2`.`name` AS `branchName`,
			`od`.`name` AS `departmentName`
		FROM
			(
				SELECT
					hydu.user_id,
					hydu.username AS user_name,
					hydui.truename AS real_name,
					hydu.mobile,
					IFNULL(hvi.vip_name,"会员") AS vip_type,
					hvi.id AS vipid,
					hydu.user_type AS type_id,					
					hydui.role_id,
					hydui.attribute,
					hydui.birthday,
					hydui.sex,
					hydui.idcard,
					concat( province,city,area) as regist_area,
					hydu.open_account,
					hydu.`status`,
					hydu.reg_esb,
					hydui.is51 as is51_cd,
					hydu.reg_time as regTime,
					pnr.`name` AS user_role,
					pnusertype.`name` AS user_type,
					pna.`name` AS user_property,
					pnac.`name` AS account_status,
					pnu.`name` AS user_status,
					hydur.username AS recommend_name,
					pnrp.`name` AS regist_plat,
					pnis51.`name` AS is51,
					FROM_UNIXTIME( hydu.reg_time, '%Y-%m-%d %H:%i:%s' ) AS reg_time,
					CASE WHEN hydui.attribute = 2 OR hydui.attribute = 3 THEN hydu.user_id ELSE hydsu.spreads_userid END AS hyd_id,
					hydui.borrower_type,
					hydu.bank_open_account bank_open_account,
					hboa.create_time AS bank_open_time,
					hboa.account AS bank_account
				FROM
					huiyingdai_users hydu 
				LEFT JOIN huiyingdai_users_info hydui ON hydu.user_id = hydui.user_id
				LEFT JOIN hyjf_vip_info hvi ON hvi.id = hydui.vip_id
				LEFT JOIN huiyingdai_spreads_users hydsu ON hydsu.user_id = hydu.user_id
				LEFT JOIN huiyingdai_users hydur ON hydur.user_id = hydsu.spreads_userid
				LEFT JOIN hyjf_param_name pnr ON cast(hydui.role_id AS CHAR) = pnr.name_cd AND pnr.name_class = 'USER_ROLE'
				LEFT JOIN hyjf_param_name pna ON cast(hydui.attribute AS CHAR) = pna.name_cd AND pna.name_class = 'USER_PROPERTY'
				LEFT JOIN hyjf_param_name pnac ON cast(hydu.open_account AS CHAR) = pnac.name_cd AND pnac.name_class = 'ACCOUNT_STATUS'
				LEFT JOIN hyjf_param_name pnu ON cast(hydu.`status` AS CHAR) = pnu.name_cd AND pnu.name_class = 'USER_STATUS'
				LEFT JOIN hyjf_param_name pnrp ON cast(hydu.reg_esb AS CHAR) = pnrp.name_cd AND pnrp.name_class = 'CLIENT'
				LEFT JOIN hyjf_param_name pnis51 ON cast(hydui.is51 AS CHAR) = pnis51.name_cd AND pnis51.name_class = 'IS_51'
				LEFT JOIN hyjf_param_name pnusertype ON cast(hydu.user_type AS CHAR) = pnusertype.name_cd AND pnusertype.name_class = 'USER_TYPE'
				LEFT JOIN hyjf_bank_open_account hboa ON hydu.user_id = hboa.user_id
				) t
		LEFT JOIN `hyjf_crm`.`oa_users` `ou` ON `ou`.hyd_id = t.hyd_id AND ou.user_status IN ('E','Q1','Q11','Q2','Q21')
		LEFT JOIN `hyjf_crm`.`oa_department` `od` ON `od`.`id` = `ou`.`departmentid` AND `od`.id IS NOT NULL
		LEFT JOIN `hyjf_crm`.`oa_department` `od2` ON `od2`.`id` = `od`.`parentid`
		LEFT JOIN `hyjf_crm`.`oa_department` `od3` ON `od3`.`id` = `od2`.`parentid`
		<include refid="Where_Clause" />
		ORDER BY t.reg_time DESC
		<if test="limitStart != null and limitEnd !=null" >
	     		LIMIT #{limitStart,jdbcType=INTEGER} , #{limitEnd,jdbcType=INTEGER}
	    	</if>
	</select>
	
	<resultMap id="UserDetailPOMap" type="com.hyjf.mybatis.model.customize.callcenter.CallcenterUserDetailCustomize">
		<id column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="user_nick_name" property="userNickName" jdbcType="VARCHAR" />
		<result column="user_property" property="userProperty" jdbcType="INTEGER" />
		<result column="role" property="role" jdbcType="INTEGER" />
		<result column="user_type" property="userType" jdbcType="VARCHAR" />
		<result column="recommend_name" property="recommendName" jdbcType="VARCHAR" />
		<result column="depart_name" property="departName" jdbcType="VARCHAR" />
		<result column="regist_pid_name" property="registPidName" jdbcType="VARCHAR" />
		<result column="regist_plat" property="registPlat" jdbcType="INTEGER" />
		<result column="open_account_plat" property="openAccountPlat" jdbcType="INTEGER" />
		<result column="regist_ip" property="registIP" jdbcType="VARCHAR" />
		<result column="regist_time" property="registTime" jdbcType="TIMESTAMP" />
		<result column="open_account_time" property="openAccountTime" jdbcType="TIMESTAMP" />
		<result column="last_login_ip" property="lastLoginIP" jdbcType="VARCHAR" />
		<result column="last_login_time" property="lastLoginTime" jdbcType="VARCHAR" />
		<result column="em_name" property="emName" jdbcType="VARCHAR" />
		<result column="em_relation" property="emRealtion" jdbcType="INTEGER" />
		<result column="em_phone" property="emPhone" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="email_status" property="emailStatus" jdbcType="INTEGER" />
		<result column="mobile" property="mobile" jdbcType="VARCHAR" />
		<result column="mobile_status" property="mobileStatus" jdbcType="INTEGER" />
		<result column="real_name" property="realName" jdbcType="VARCHAR" />
		<result column="real_name_status" property="realNameStatus" jdbcType="INTEGER" />
		<result column="account" property="account" jdbcType="VARCHAR" />
		<result column="account_status" property="accountStatus" jdbcType="INTEGER" />
		<result column="customer_account" property="customerAccount" jdbcType="VARCHAR" />
		<result column="id_card" property="idCard" jdbcType="VARCHAR" />
		<result column="icon_url" property="iconUrl" jdbcType="VARCHAR" />
		<result column="vip_id" property="vipId" jdbcType="INTEGER" />
		<result column="vip_value" property="vipValue" jdbcType="INTEGER" />
		<result column="vip_exp_date" property="vipExpDate" jdbcType="VARCHAR" />
		<result column="borrower_type" property="borrowerType"  jdbcType="INTEGER" />
		<result column="is_set_password" property="isSetPassword"  jdbcType="INTEGER" />
	</resultMap>
	<select id="selectUserDetailById" resultMap="UserDetailPOMap" parameterType="java.lang.Integer">
		SELECT
			hydu.user_id,
			hydu.username AS user_name,
			hydui.nickname AS user_nick_name,
			hydu.iconUrl AS icon_url,
			hydui.vip_id,
			hydui.vip_value,
			from_unixtime(
				hydui.vip_exp_date,
				'%Y-%m-%d %H:%i:%s'
			) AS vip_exp_date,
			pnr.`name` AS role,
			pnusertype .`name` AS user_type,
			pna.`name` AS user_property,
			hydurefer.username AS recommend_name,
			hydd.`name` AS depart_name,
			hydup.source_name AS regist_pid_name,
			hyjfpnr. NAME AS regist_plat,
			hyjfpno. NAME AS open_account_plat,
			hydu.reg_ip AS regist_ip,
			from_unixtime(
				hydu.reg_time,
				'%Y-%m-%d %H:%i:%s'
			) AS regist_time,
			from_unixtime(
				hydac.addtime,
				'%Y-%m-%d %H:%i:%s'
			) AS open_account_time,
			hydu.login_ip AS last_login_ip,
			from_unixtime(
				hydu.login_time,
				'%Y-%m-%d %H:%i:%s'
			) AS last_login_time,
			hyduc.rl_name AS em_name,
			hyjfpnur.`name` AS em_relation,
			hyduc.rl_phone AS em_phone,
			hydu.email,
			hydui.email_isApprove AS email_status,
			hydu.mobile,
			hydui.mobile_isApprove AS mobile_status,
			hydui.truename AS real_name,
			hydui.truename_isApprove AS real_name_status,
			hydu.`status` AS account_status,
			hydac.chinapnr_usrid AS account,
			hydac.chinapnr_usrcustid AS customer_account,
			hydui.idcard AS id_card,
			hydui.borrower_type,
			hydu.is_set_password AS is_set_password
		FROM
			huiyingdai_users hydu
		LEFT JOIN huiyingdai_users_info hydui ON hydu.user_id = hydui.user_id
		LEFT JOIN huiyingdai_users_contact hyduc ON hydu.user_id = hyduc.user_id
		LEFT JOIN huiyingdai_account_chinapnr hydac ON hydac.user_id = hydu.user_id
		LEFT JOIN huiyingdai_utm_reg hydur ON hydur.user_id = hydu.user_id
		LEFT JOIN huiyingdai_utm hydutm ON hydur.utm_id = hydutm.utm_id
		LEFT JOIN huiyingdai_utm_plat hydup ON hydup.source_id = hydutm.source_id
		LEFT JOIN huiyingdai_spreads_users hydsu ON hydsu.user_id = hydu.user_id
		LEFT JOIN huiyingdai_users hydurefer ON hydurefer.user_id = hydsu.spreads_userid
		LEFT JOIN hyjf_crm.oa_users oau ON oau.hyd_id = hydsu.spreads_userid and oau.user_status IN ('E','Q1','Q11','Q2','Q21') 
		LEFT JOIN hyjf_crm.oa_department hydd ON hydd.id = oau.departmentid 
		LEFT JOIN hyjf_param_name hyjfpnr ON hyjfpnr.name_cd = hydu.reg_esb
		AND hyjfpnr.name_class = 'CLIENT'
		LEFT JOIN hyjf_param_name hyjfpno ON hyjfpno.name_cd = hydu.account_esb
		AND hyjfpno.name_class = 'CLIENT'
		LEFT JOIN hyjf_param_name pnr ON cast(hydui.role_id AS CHAR) = pnr.name_cd
		AND pnr.name_class = 'USER_ROLE'
		LEFT JOIN hyjf_param_name pna ON cast(hydui.attribute AS CHAR) = pna.name_cd
		AND pna.name_class = 'USER_PROPERTY'
		LEFT JOIN hyjf_param_name hyjfpnur ON hyjfpnur.name_cd = hyduc.relation
		AND hyjfpnur.name_class = 'USER_RELATION'
		LEFT JOIN hyjf_param_name pnusertype ON cast(hydu.user_type AS CHAR) = pnusertype.name_cd 
		AND pnusertype.name_class = 'USER_TYPE'
		WHERE
		hydu.user_id =#{userId,jdbcType=INTEGER}
	</select>
	
	<sql id="Where_Clause_huifu">
		<where>
			hydu.open_account = 1
			<if test="userId != null and userId !=''">
				AND hydu.user_id = #{userId}
			</if>
			<if test="userName != null and userName !='' ">
				AND hydu.username LIKE CONCAT('%',
				#{userName,jdbcType=VARCHAR}, '%')
			</if>
			<if test="account != null and account !='' ">
				AND hydac.chinapnr_usrid = #{account,jdbcType=VARCHAR}
			</if>
			<if test="idCard != null and idCard !='' ">
				AND hydui.idcard LIKE CONCAT('%',
				#{idCard,jdbcType=VARCHAR}, '%')
			</if>
			<if test="userProperty != null and userProperty != ''">
				AND hydui.attribute = #{userProperty,jdbcType=INTEGER}
			</if>
			<if test="realName != null and realName !='' ">
				AND hydui.truename LIKE CONCAT('%',
				#{realName,jdbcType=VARCHAR}, '%')
			</if>
			<if test="openAccountPlat != null and openAccountPlat !='' ">
				AND hydu.account_esb =
				#{openAccountPlat,jdbcType=VARCHAR}
			</if>
			<if test="openTimeStart != null and openTimeStart !='' ">
				AND FROM_UNIXTIME( hydac.addtime, '%Y-%m-%d' ) <![CDATA[>=]]>
				#{openTimeStart,jdbcType=VARCHAR}
			</if>
			<if test="openTimeEnd != null and openTimeEnd !='' ">
				AND FROM_UNIXTIME( hydac.addtime, '%Y-%m-%d' ) <![CDATA[<=]]>
				#{openTimeEnd,jdbcType=VARCHAR}
			</if>
		</where>
	</sql>
	<resultMap id="AccountListPOMap"
		type="com.hyjf.mybatis.model.customize.callcenter.CallcenterUserHuifuCustomize">
		<id column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="username" property="userName" jdbcType="VARCHAR" />
		<result column="real_name" property="realName" jdbcType="VARCHAR" />
		<result column="id_card" property="idCard" jdbcType="VARCHAR" />
		<result column="user_property" property="userProperty" jdbcType="VARCHAR" />
		<result column="account" property="account" jdbcType="VARCHAR" />
		<result column="customer_account" property="customerAccount"
			jdbcType="VARCHAR" />
		<result column="account_status_name" property="accountStatusName"
			jdbcType="VARCHAR" />
		<result column="open_account_plat" property="openAccountPlat"
			jdbcType="INTEGER" />
		<result column="open_time" property="openTime" jdbcType="TIMESTAMP" />
		<result column="sex" property="sex"  jdbcType="VARCHAR" />
		<result column="birthday" property="birthday"  jdbcType="VARCHAR" />
		<result column="regist_area" property="registArea"  jdbcType="VARCHAR" />
		<result column="idcard" property="idcard"  jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectAccountList" resultMap="AccountListPOMap"
		parameterType="Map">
		SELECT
		hydu.user_id,
		hydu.username,
		hydui.truename AS real_name,
		hydui.idcard AS id_card,
		hydui.attribute,
		hydui.birthday,
		hydui.sex,
		hydui.idcard,
		concat( province,city,area) as regist_area,
		pna.`name` AS user_property,
		pnoap.`name` AS account_status_name,
		hydac.chinapnr_usrid AS account,
		hydac.chinapnr_usrcustid AS customer_account,
		pnoa.`name` AS open_account_plat,
		FROM_UNIXTIME( hydac.addtime, '%Y-%m-%d %H:%i:%s' ) AS open_time
		FROM
			huiyingdai_users hydu
		LEFT JOIN huiyingdai_users_info hydui ON hydu.user_id = hydui.user_id
		LEFT JOIN huiyingdai_account_chinapnr hydac ON hydac.user_id = hydu.user_id
		LEFT JOIN hyjf_param_name pna ON cast(hydui.attribute AS CHAR) = pna.name_cd AND pna.name_class = 'USER_PROPERTY'
		LEFT JOIN hyjf_param_name pnoap ON CAST(hydu.open_account AS CHAR) = pnoap.name_cd AND pnoap.name_class = 'ACCOUNT_STATUS'
		LEFT JOIN hyjf_param_name pnoa ON CAST(hydu.account_esb AS CHAR) = pnoa.name_cd AND pnoa.name_class = 'CLIENT'
		<include refid="Where_Clause_huifu" />
		ORDER BY hydac.addtime DESC
		<if test="limitStart != null and limitEnd !=null">
			LIMIT #{limitStart,jdbcType=INTEGER} , #{limitEnd,jdbcType=INTEGER}
		</if>
	</select>

	<select id="selectNoServiceUsersList" resultMap="UserListPOMap"
		parameterType="Map">
		SELECT
			hydu.user_id,
			hydu.username,
			hydu.mobile
		FROM
			huiyingdai_users hydu
		WHERE 
			NOT EXISTS (SELECT 1 
						FROM callcenter_service_users csu 
						WHERE hydu.username = csu.username 
						AND csu.assigned != 0)
		ORDER BY hydu.reg_time DESC
		<if test="limitStart != null and limitEnd !=null">
			LIMIT #{limitStart,jdbcType=INTEGER} , #{limitEnd,jdbcType=INTEGER}
		</if>
	</select>
	
	<!-- 复投用户筛选 -->
	<select id="selectNoServiceFuTouUsersList" resultMap="UserListPOMap"
		parameterType="Map">
		SELECT
			hydu.user_id,
			hydu.username,
			hydu.mobile
		FROM
			huiyingdai_users hydu
			<!-- #关联用户信息 -->
			JOIN huiyingdai_users_info info ON hydu.user_id = info.user_id 
		WHERE
			NOT EXISTS (
				SELECT
					1
				FROM
					callcenter_service_users csu
				WHERE
					hydu.username = csu.username
				AND csu.assigned != 0
			)
		<!-- #关联用户信息 -->
		AND info.attribute = 0
		<!-- #6个月内注册的用户不传 -->
		AND hydu.reg_time <![CDATA[<=]]> UNIX_TIMESTAMP(
			DATE_ADD(NOW(), INTERVAL - 6 MONTH)
		) 
		<!-- #有投资是在还款中 -->
		AND EXISTS (
			SELECT
				tender.user_id
			FROM
				huiyingdai_borrow_tender tender,
				huiyingdai_borrow borrow
			WHERE
				tender.user_id = hydu.user_id
			AND tender.borrow_nid = borrow.borrow_nid
			AND borrow.`status` = 4
		)
		<if test="limitStart != null and limitEnd !=null">
			LIMIT #{limitStart,jdbcType=INTEGER} , #{limitEnd,jdbcType=INTEGER}
		</if>
	</select>
	
	<!-- 流失用户筛选 -->
	<select id="selectNoServiceLiuShiUsersList" resultMap="UserListPOMap"
		parameterType="Map">
		SELECT
			hydu.user_id,
			hydu.username,
			hydu.mobile
		FROM
			huiyingdai_users hydu
		<!-- #关联用户信息 -->
		JOIN huiyingdai_users_info info ON hydu.user_id = info.user_id 
		<!-- #关联用户账户的信息 -->
		JOIN huiyingdai_account account ON account.user_id = hydu.user_id 
		WHERE
			NOT EXISTS (
				SELECT
					1
				FROM
					callcenter_service_users csu
				WHERE
					hydu.username = csu.username
				AND csu.assigned != 0
			)
		<!-- #无主单 -->
		AND info.attribute = 0 
		<!-- #账户资产≤50元 -->
		AND account.bank_total <![CDATA[<=]]> 50 
		<!-- #还款状态为“还款中”的用户不传 -->
		AND NOT EXISTS (
			SELECT
				tender.user_id
			FROM
				huiyingdai_borrow_tender tender,
				huiyingdai_borrow borrow
			WHERE
				tender.user_id = hydu.user_id
			AND tender.borrow_nid = borrow.borrow_nid
			AND borrow.`status` = 4
		) 
		<!-- #累计投资金额≥5000 -->
		AND (
			SELECT
				SUM(t.account)
			FROM
				huiyingdai_borrow_tender t
			WHERE
				t.user_id = hydu.user_id
		) <![CDATA[>=]]> 5000
		<if test="limitStart != null and limitEnd !=null">
			LIMIT #{limitStart,jdbcType=INTEGER} , #{limitEnd,jdbcType=INTEGER}
		</if>
	</select>
</mapper>
